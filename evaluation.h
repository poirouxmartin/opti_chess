// Evaluateur de position (heuristiques)
class Evaluator {
    public:


    // Paramètres d'évaluation

    // Coefficiants des heuristiques
    float _piece_value = 1.0;
    float _piece_activity = 0.0;
    float _piece_positioning = 0.02;
    float _random_add = 0.0;
    float _bishop_pair = 0.4;
    float _castling_rights = 0.5;
    float _player_trait = 0.15;
    float _king_safety = 0.005;
    float _pawn_structure = 0.01;


    // Valeur des pièces
    float _pawn_value_begin = 0.95;
    float _pawn_value_end = 1.0;
    float _knight_value_begin = 3.1;
    float _knight_value_end = 3.1;
    float _bishop_value_begin = 3.3;
    float _bishop_value_end = 3.2;
    float _rook_value_begin = 4.8;
    float _rook_value_end = 5.8;
    float _queen_value_begin = 9.5;
    float _queen_value_end = 9.5;
    float _king_value_begin = 1000.0;
    float _king_value_end = 1000.0;


    // Positionnement des pièces

    int _pos_pawn_begin[8][8]       {   {   0,    0,    0,    0,    0,    0,    0,    0},
                                        {  78,   83,   86,  130,  130,   82,   85,   90},
                                        {  37,   29,   21,  110,  110,   60,   44,   57},
                                        { -17,   16,   20,   95,  100,   30,   35,   33},
                                        { -10,    0,   50,   65,   75,  -20,  -10,  -23},
                                        { -10,    0,   20,   25,   25,  -40,   20,  -19},
                                        { -20,  -30,    0,    0,   0,    20,   10,  -20},
                                        {   0,    0,    0,    0,    0,    0,    0,    0}   };

    int _pos_pawn_end[8][8]         {   {   0,    0,    0,    0,    0,    0,    0,    0},
                                        { 200,  150,  150,  150,  150,  150,  150,  200},
                                        { 150,  125,  125,  125,  125,  125,  125,  150},
                                        { 100,  100,  100,  100,  100,  100,  100,  100},
                                        {  50,   50,   50,   50,   50,   50,   50,   50},
                                        {  10,   10,   10,   10,   10,   10,   10,   10},
                                        { -20,  -40,  -30,    0,    0,  -30,  -40,  -20},
                                        {   0,    0,    0,    0,    0,    0,    0,    0}   };

    int _pos_knight_begin[8][8]     {   { -66,  -53,  -75,  -75,  -10,  -55,  -58,  -70},
                                        {  -3,   -6,   50,  -36,    4,   62,   -4,  -14},
                                        { -10,   67,   25,   74,   73,   50,   62,   -2},
                                        { -10,   24,   40,   75,   75,   40,   25,   20},
                                        { -10,    5,   31,   45,   60,   35,    2,    0},
                                        { -18,   10,   25,   22,   18,   30,   20,  -14},
                                        { -40,  -15,    2,    5,    2,    0,  -23,  -25},
                                        { -74,  -20,  -26,  -24,  -19,  -20,  -20,  -69}   };

    int _pos_knight_end[8][8]       {   { -50,  -25,  -25,  -25,  -25,  -25,  -25,  -50},
                                        { -25,    0,    0,    0,    0,    0,    0,  -25},
                                        { -25,    0,   10,   25,   25,   10,    0,  -25},
                                        { -25,    0,   25,   50,   50,   25,    0,  -25},
                                        { -25,    0,   25,   50,   50,   25,    0,  -25},
                                        { -25,    0,   10,   25,   25,   10,    0,  -25},
                                        { -25,    0,    0,    0,    0,    0,    0,  -25},
                                        { -50,  -25,  -25,  -25,  -25,  -25,  -25,  -50}   };

    int _pos_bishop_begin[8][8]     {   { -59,  -78,  -82,  -76,  -23, -107,  -37,  -50},
                                        { -11,   20,   35,  -42,  -39,   31,    2,  -22},
                                        {  -9,   39,  -32,   41,   52,  -10,   28,  -14},
                                        {  25,   20,   20,   34,   26,   25,   20,   10},
                                        {  13,   10,   35,   23,   17,   30,    0,   17},
                                        {  14,   25,   24,   30,   25,   25,   20,   15},
                                        {  19,   30,   11,   10,   20,    6,   35,   16},
                                        {  -7,    2,  -15,  -12,  -14,  -20,  -10,  -10}   };

    int _pos_bishop_end[8][8]       {   { -50,  -25,  -25,  -25,  -25,  -25,  -25,  -50},
                                        { -25,    0,    0,    0,    0,    0,    0,  -25},
                                        { -25,    0,    5,    5,    5,    5,    0,  -25},
                                        { -25,    0,    5,   10,   10,    5,    0,  -25},
                                        { -25,    0,    5,   10,   10,    5,    0,  -25},
                                        { -25,    0,    5,    5,    5,    5,    0,  -25},
                                        { -25,    0,    0,    0,    0,    0,    0,  -25},
                                        { -50,  -25,  -25,  -25,  -25,  -25,  -25,  -50}   };

    int _pos_rook_begin[8][8]       {   {  35,   29,   33,    4,   37,   33,   56,   50},
                                        {  75,   70,   75,   80,   80,   75,   70,   75},
                                        {  19,   35,   28,   33,   45,   27,   25,   15},
                                        {   0,    5,   16,   13,   18,   -4,   -9,   -6},
                                        { -28,  -35,  -16,  -21,  -13,  -29,  -46,  -30},
                                        { -42,  -28,  -42,  -25,  -25,  -35,  -26,  -46},
                                        { -53,  -38,  -31,  -26,  -29,  -43,  -44,  -53},
                                        { -30,  -24,    5,   25,   35,    5,  -31,  -32}   };

    int _pos_rook_end[8][8]         {   {   0,    0,    0,    0,    0,    0,    0,    0},
                                        { -25,   25,   25,   25,   25,   25,   25,  -25},
                                        { -25,    0,    0,    0,    0,    0,    0,  -25},
                                        { -25,    0,    0,    0,    0,    0,    0,  -25},
                                        { -25,    0,    0,    0,    0,    0,    0,  -25},
                                        { -25,    0,    0,    0,    0,    0,    0,  -25},
                                        { -25,    0,    0,    0,    0,    0,    0,  -25},
                                        {  10,   10,   10,   10,   10,   10,   10,   10}   };

    // à changer... 
    int _pos_queen_begin[8][8]      {   { -50,  -50,  -50,  -50,  -50,  -50,  -50,  -50},
                                        {   0,  -30,    0,    0,    0,   40,   40,   40},
                                        { -20,    0,   30,   50,   40,   20,   30,  -10},
                                        {  30,    0,   20,  -10,  -20,   10,   20,  -10},
                                        {  40,    0,   10,  -30,  -60,   10,   20,    0},
                                        {   0,   50,  -30,   20,  -70,   20,    0,    0},
                                        { -40,  -20,   40,   40,   20,    0,  -20,  -40},
                                        { -80,  -40,  -20,   75,   10,  -40,  -40,  -80}   };

    int _pos_queen_end[8][8]        {   { -40,  -30,  -20,  -10,  -10,  -20,  -30,  -40},
                                        { -30,   37,   50,   50,   50,   50,   37,  -30},
                                        {   0,   45,   60,   75,   75,   60,   45,    0},
                                        {   0,   50,   60,  100,  100,   60,   50,    0},
                                        { -10,   50,   50,  100,  100,   50,   50,  -10},
                                        { -20,   50,   50,   50,   50,   50,   50,  -20},
                                        { -40,   25,   25,   40,   40,   25,   25,  -40},
                                        { -60,  -50,  -40,  -30,  -30,  -40,  -50,  -60}   };

    int _pos_king_begin[8][8]       {   {   4,   54,   47,  -99,  -99,   60,   83,  -62},
                                        { -32,   10,   55,   56,   56,   55,   10,    3},
                                        { -62,   12,  -57,   44,  -67,   28,   37,  -31},
                                        { -55,   50,   11,   -4,  -19,   13,    0,  -49},
                                        { -55,  -43,  -52,  -28,  -51,  -47,   -8,  -50},
                                        { -47,  -42,  -43,  -79,  -64,  -32,  -29,  -32},
                                        {  -4,    3,  -14,  -90, -100,  -18,   13,    4},
                                        {  37,   40,   10,  -64,  -50,  -10,   60,   48}   };

    int _pos_king_end[8][8]         {   { -40,  -30,  -20,  -10,  -10,  -20,  -30,  -40},
                                        { -30,   37,   50,   50,   50,   50,   37,  -30},
                                        {   0,   45,   60,   75,   75,   60,   45,    0},
                                        {   0,   50,   60,  100,  100,   60,   50,    0},
                                        { -10,   50,   50,  100,  100,   50,   50,  -10},
                                        { -20,   50,   50,   50,   50,   50,   50,  -20},
                                        { -40,   25,   25,   40,   40,   25,   25,  -40},
                                        { -60,  -50,  -40,  -30,  -30,  -40,  -50,  -60}   };


    // Constructeur par défaut
    Evaluator();



};