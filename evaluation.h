// Evaluateur de position (heuristiques)
class Evaluator {
    public:


    // Paramètres d'évaluation

    // Coefficients des heuristiques
    float _piece_value = 1.0;
    float _piece_activity = 0.0;
    float _piece_positioning = 0.02;
    float _random_add = 0.0;
    float _bishop_pair = 0.4;
    float _castling_rights = 0.5;
    float _player_trait = 0.15;
    float _king_safety = 0.005;
    float _pawn_structure = 0.01;
    float _attacks = 0.01;
    float _kings_opposition = 0.75;


    // Valeurs des pièces en début de partie (pion, cavalier, fou, tour, dame, roi)
    int _pieces_value_begin[6] = {85, 320, 340, 480, 980, 100000};

    // Valeurs en fin de partie
    int _pieces_value_end[6] = {92, 310, 350, 580, 1020, 100000};

    // Positionnement des pièces
    
    // Tables faites à la main

    int _pos_pawn_begin[8][8]       {   {   0,    0,    0,    0,    0,    0,    0,    0},
                                        {  78,   83,   86,  130,  130,   82,   85,   90},
                                        {  37,   29,   21,  110,  110,   60,   44,   57},
                                        { -17,   16,   20,   95,  100,   30,   35,   33},
                                        { -25,    0,   50,   75,   75,   10,  -10,  -23},
                                        { -25,    0,   20,   25,   25,  -25,   20,  -19},
                                        { -30,  -10,  -20,   10,  -10,   20,   20,  -20},
                                        {   0,    0,    0,    0,    0,    0,    0,    0}   };

    int _pos_pawn_end[8][8]         {   {   0,    0,    0,    0,    0,    0,    0,    0},
                                        { 100,  100,  100,  100,  100,  100,  100,  100},
                                        {  50,   50,   50,   50,   50,   50,   50,   50},
                                        {  25,   25,   25,   25,   25,   25,   25,   25},
                                        {  20,   20,   20,   20,   20,   20,   20,   20},
                                        {  10,   10,   10,   10,   10,   10,   10,   10},
                                        { -20,  -40,  -30,    0,    0,  -30,  -40,  -20},
                                        {   0,    0,    0,    0,    0,    0,    0,    0}   };

    int _pos_knight_begin[8][8]     {   { -80,  -53,  -75,  -75,  -10,  -55,  -58,  -70},
                                        {  -3,   -6,   50,  -36,    4,   62,   -4,  -14},
                                        { -10,   67,   25,   74,   73,   60,   62,   40},
                                        { -10,   24,   40,   55,   50,   40,   25,   20},
                                        { -10,    5,   31,   25,   40,   30,    2,    0},
                                        { -18,   10,   25,   22,   18,   35,   20,  -14},
                                        { -40,  -30,    2,    5,    2,    0,  -23,  -25},
                                        { -74,  -20,  -46,  -34,  -19,  -25,  -20,  -59}   };

    int _pos_knight_end[8][8]       {   { -50,  -25,  -25,  -25,  -25,  -25,  -25,  -50},
                                        { -25,    0,    0,    0,    0,    0,    0,  -25},
                                        { -25,    0,   10,   25,   25,   10,    0,  -25},
                                        { -25,    0,   25,   50,   50,   25,    0,  -25},
                                        { -25,    0,   25,   50,   50,   25,    0,  -25},
                                        { -25,    0,   10,   25,   25,   10,    0,  -25},
                                        { -25,    0,    0,    0,    0,    0,    0,  -25},
                                        { -50,  -25,  -25,  -25,  -25,  -25,  -25,  -50}   };

    int _pos_bishop_begin[8][8]     {   { -59,  -78,  -82,  -76,  -23, -107,  -37,  -50},
                                        { -11,   20,   35,  -42,  -39,   31,    2,  -22},
                                        {  -9,   39,  -32,   41,   52,  -10,   28,  -14},
                                        {  25,   20,   20,   34,   26,   25,   20,   10},
                                        {  13,   10,   35,   23,   17,   30,    0,   17},
                                        {  14,   25,   24,   30,   25,   25,   20,   15},
                                        {  19,   30,   11,   10,   20,    6,   35,   16},
                                        { -30,    2,  -15,  -12,  -14,  -20,  -10,  -20}   };

    int _pos_bishop_end[8][8]       {   { -50,  -25,  -25,  -25,  -25,  -25,  -25,  -50},
                                        { -25,    0,    0,    0,    0,    0,    0,  -25},
                                        { -25,    0,    5,    5,    5,    5,    0,  -25},
                                        { -25,    0,    5,   10,   10,    5,    0,  -25},
                                        { -25,    0,    5,   10,   10,    5,    0,  -25},
                                        { -25,    0,    5,    5,    5,    5,    0,  -25},
                                        { -25,    0,    0,    0,    0,    0,    0,  -25},
                                        { -50,  -25,  -25,  -25,  -25,  -25,  -25,  -50}   };

    int _pos_rook_begin[8][8]       {   {  35,   29,   33,    4,   37,   33,   56,   50},
                                        {  75,   70,   75,   80,   80,   75,   70,   75},
                                        {  19,   35,   28,   33,   45,   27,   25,   15},
                                        {   0,  -15,  -10,   13,   18,   -4,   -9,   10},
                                        { -28,  -35,  -16,  -21,  -13,  -29,  -46,  -30},
                                        { -42,  -28,  -42,  -25,  -25,  -35,  -15,   10},
                                        { -53,  -38,  -31,  -26,  -29,  -43,  -44,  -53},
                                        { -30,  -24,    5,   25,   35,    5,  -31,  -32}   };

    int _pos_rook_end[8][8]         {   {   5,   15,   15,   15,   15,   15,   15,    5},
                                        {  20,   25,   25,   25,   25,   25,   25,   20},
                                        {  -5,    0,    0,    0,    0,    0,    0,   -5},
                                        {  -5,    0,    0,    0,    0,    0,    0,   -5},
                                        {  -5,    0,    0,    0,    0,    0,    0,   -5},
                                        {  -5,    0,    0,    0,    0,    0,    0,   -5},
                                        {  -5,    0,    0,    0,    0,    0,    0,   -5},
                                        {  10,   10,   10,   10,   10,   10,   10,   10}   };

    // à changer... 
    int _pos_queen_begin[8][8]      {   { -50,  -50,  -50,  -50,   50,   40,   40,   40},
                                        { -20,  -30,    0,    0,    0,   40,   40,   50},
                                        { -20,    0,   30,   50,   40,   50,   30,   60},
                                        {  30,  -20,  -30,  -40,  -40,   20,   20,   10},
                                        {  40,  -30,  -20,  -60,  -60,    0,   20,    0},
                                        {   0,   50,  -10,   30,  -70,   20,    0,    0},
                                        { -40,  -20,   60,   60,   30,    0,  -20,  -40},
                                        { -80,  -40,  -20,   90,   10,  -40,  -40,  -80}   };

    int _pos_queen_end[8][8]        {   { -40,  -30,  -20,  -10,  -10,  -20,  -30,  -40},
                                        { -30,   37,   50,   50,   50,   50,   37,  -30},
                                        {   0,   45,   60,   75,   75,   60,   45,    0},
                                        {   0,   50,   60,  100,  100,   60,   50,    0},
                                        { -10,   50,   50,  100,  100,   50,   50,  -10},
                                        { -20,   50,   50,   50,   50,   50,   50,  -20},
                                        { -40,   25,   25,   40,   40,   25,   25,  -40},
                                        { -60,  -50,  -40,  -30,  -30,  -40,  -50,  -60}   };

    int _pos_king_begin[8][8]       {   { -60,   54,   47,  -99,  -99,   60,   83,  -62},
                                        { -32,   10,   55,   56,   56,   55,   10,    3},
                                        { -62,   12,  -57,  -50,  -67,   28,   37,  -31},
                                        { -55,   50,   11,   -4,  -19,   13,  -35,  -49},
                                        { -55,  -43,  -52,  -28,  -51,  -47,  -40,  -50},
                                        { -47,  -42,  -43,  -79,  -64,  -32,  -29,  -32},
                                        {  -4,    3,  -14,  -90, -100,  -18,   13,    4},
                                        {  37,   60,   10,  -64,  -50,  -10,   60,   48}   };

    int _pos_king_end[8][8]         {   { -40,  -30,  -20,  -10,  -10,  -20,  -30,  -40},
                                        { -30,   15,   20,   30,   30,   20,   15,  -30},
                                        {   0,   20,   40,   40,   40,   40,   20,    0},
                                        {   0,   30,   40,   50,   50,   40,   30,    0},
                                        { -10,   25,   40,   50,   50,   40,   25,  -10},
                                        { -20,   15,   20,   30,   30,   20,   15,  -20},
                                        { -40,    5,   10,   15,   15,   10,    5,  -40},
                                        { -60,  -50,  -40,  -30,  -30,  -40,  -50,  -60}   };


    // Tables de : http://www.talkchess.com/forum3/viewtopic.php?f=2&t=68311&start=19

    // int _pos_pawn_begin[8][8] = {
    //     {0,   0,   0,   0,   0,   0,  0,   0},
    //     {98, 134,  61,  95,  68, 126, 34, -11},
    //     {-6,   7,  26,  31,  65,  56, 25, -20},
    //     {-14,  13,   6,  21,  23,  12, 17, -23},
    //     {-27,  -2,  -5,  12,  17,   6, 10, -25},
    //     {-26,  -4,  -4, -10,   3,   3, 33, -12},
    //     {-35,  -1, -20, -23, -15,  24, 38, -22},
    //     {0,   0,   0,   0,   0,   0,  0,   0}
    // };

    // int _pos_pawn_end[8][8] = {
    //     {0,   0,   0,   0,   0,   0,   0,   0},
    //     {178, 173, 158, 134, 147, 132, 165, 187},
    //     {94, 100,  85,  67,  56,  53,  82,  84},
    //     {32,  24,  13,   5,  -2,   4,  17,  17},
    //     {13,   9,  -3,  -7,  -7,  -8,   3,  -1},
    //     {4,   7,  -6,   1,   0,  -5,  -1,  -8},
    //     {13,   8,   8,  10,  13,   0,   2,  -7},
    //     {0,   0,   0,   0,   0,   0,   0,   0}
    // };

    // int _pos_knight_begin[8][8] = {
    //     {-167, -89, -34, -49,  61, -97, -15, -107},
    //     {-73, -41,  72,  36,  23,  62,   7,  -17},
    //     {-47,  60,  37,  65,  84, 129,  73,   44},
    //     {-9,  17,  19,  53,  37,  69,  18,   22},
    //     {-13,   4,  16,  13,  28,  19,  21,   -8},
    //     {-23,  -9,  12,  10,  19,  17,  25,  -16},
    //     {-29, -53, -12,  -3,  -1,  18, -14,  -19},
    //     {-105, -21, -58, -33, -17, -28, -19,  -23}
    // };

    // int _pos_knight_end[8][8] = {
    //     {-58, -38, -13, -28, -31, -27, -63, -99},
    //     {-25,  -8, -25,  -2,  -9, -25, -24, -52},
    //     {-24, -20,  10,   9,  -1,  -9, -19, -41},
    //     {-17,   3,  22,  22,  22,  11,   8, -18},
    //     {-18,  -6,  16,  25,  16,  17,   4, -18},
    //     {-23,  -3,  -1,  15,  10,  -3, -20, -22},
    //     {-42, -20, -10,  -5,  -2, -20, -23, -44},
    //     {-29, -51, -23, -15, -22, -18, -50, -64}
    // };

    // int _pos_bishop_begin[8][8] = {
    //     {-29,   4, -82, -37, -25, -42,   7,  -8},
    //     {-26,  16, -18, -13,  30,  59,  18, -47},
    //     {-16,  37,  43,  40,  35,  50,  37,  -2},
    //     {-4,   5,  19,  50,  37,  37,   7,  -2},
    //     {-6,  13,  13,  26,  34,  12,  10,   4},
    //     {0,  15,  15,  15,  14,  27,  18,  10},
    //     {4,  15,  16,   0,   7,  21,  33,   1},
    //     {-33,  -3, -14, -21, -13, -12, -39, -21}
    // };

    // int _pos_bishop_end[8][8] = {
    //     {-14, -21, -11,  -8, -7,  -9, -17, -24},
    //     {-8,  -4,   7, -12, -3, -13,  -4, -14},
    //     {2,  -8,   0,  -1, -2,   6,   0,   4},
    //     {-3,   9,  12,   9, 14,  10,   3,   2},
    //     {-6,   3,  13,  19,  7,  10,  -3,  -9},
    //     {-12,  -3,   8,  10, 13,   3,  -7, -15},
    //     {-14, -18,  -7,  -1,  4,  -9, -15, -27},
    //     {-23,  -9, -23,  -5, -9, -16,  -5, -17}
    // };

    // int _pos_rook_begin[8][8] = {
    //     {32,  42,  32,  51, 63,  9,  31,  43},
    //     {27,  32,  58,  62, 80, 67,  26,  44},
    //     {-5,  19,  26,  36, 17, 45,  61,  16},
    //     {-24, -11,   7,  26, 24, 35,  -8, -20},
    //     {-36, -26, -12,  -1,  9, -7,   6, -23},
    //     {-45, -25, -16, -17,  3,  0,  -5, -33},
    //     {-44, -16, -20,  -9, -1, 11,  -6, -71},
    //     {-19, -13,   1,  17, 16,  7, -37, -26}
    // };

    // int _pos_rook_end[8][8]= {
    //     {13, 10, 18, 15, 12,  12,   8,   5},
    //     {11, 13, 13, 11, -3,   3,   8,   3},
    //     {7,  7,  7,  5,  4,  -3,  -5,  -3},
    //     {4,  3, 13,  1,  2,   1,  -1,   2},
    //     {3,  5,  8,  4, -5,  -6,  -8, -11},
    //     {-4,  0, -5, -1, -7, -12,  -8, -16},
    //     {-6, -6,  0,  2, -9,  -9, -11,  -3},
    //     {-9,  2,  3, -1, -5, -13,   4, -20}
    // };

    // int _pos_queen_begin[8][8] = {
    //     {-28,   0,  29,  12,  59,  44,  43,  45},
    //     {-24, -39,  -5,   1, -16,  57,  28,  54},
    //     {-13, -17,   7,   8,  29,  56,  47,  57},
    //     {-27, -27, -16, -16,  -1,  17,  -2,   1},
    //     {-9, -26,  -9, -10,  -2,  -4,   3,  -3},
    //     {-14,   2, -11,  -2,  -5,   2,  14,   5},
    //     {-35,  -8,  11,   2,   8,  15,  -3,   1},
    //     {-1, -18,  -9,  10, -15, -25, -31, -50}
    // };

    // int _pos_queen_end[8][8] = {
    //     {-9,  22,  22,  27,  27,  19,  10,  20},
    //     {-17,  20,  32,  41,  58,  25,  30,   0},
    //     {-20,   6,   9,  49,  47,  35,  19,   9},
    //     {3,  22,  24,  45,  57,  40,  57,  36},
    //     {-18,  28,  19,  47,  31,  34,  39,  23},
    //     {-16, -27,  15,   6,   9,  17,  10,   5},
    //     {-22, -23, -30, -16, -16, -23, -36, -32},
    //     {-33, -28, -22, -43,  -5, -32, -20, -41}
    // };

    // int _pos_king_begin[8][8] = {
    //     {-65,  23,  16, -15, -56, -34,   2,  13},
    //     {29,  -1, -20,  -7,  -8,  -4, -38, -29},
    //     {-9,  24,   2, -16, -20,   6,  22, -22},
    //     {-17, -20, -12, -27, -30, -25, -14, -36},
    //     {-49,  -1, -27, -39, -46, -44, -33, -51},
    //     {-14, -14, -22, -46, -44, -30, -15, -27},
    //     {1,   7,  -8, -64, -43, -16,   9,   8},
    //     {-15,  36,  12, -54,   8, -28,  24,  14}
    // };

    // int _pos_king_end[8][8] = {
    //     {-74, -35, -18, -18, -11,  15,   4, -17},
    //     {-12,  17,  14,  17,  17,  38,  23,  11},
    //     {10,  17,  23,  15,  20,  45,  44,  13},
    //     {-8,  22,  24,  27,  26,  33,  26,   3},
    //     {-18,  -4,  21,  24,  27,  23,   9, -11},
    //     {-19,  -3,  11,  21,  23,  16,   7,  -9},
    //     {-27, -11,   4,  13,  14,   4,  -5, -17},
    //     {-53, -34, -21, -11, -28, -14, -24, -43}
    // };


    // Constructeur par défaut
    Evaluator();



};