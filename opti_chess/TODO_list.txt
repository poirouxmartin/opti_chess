----- Documentation pour la suite -----

https://cs229.stanford.edu/proj2012/DeSa-ClassifyingChessPositions.pdf
https://www.wikiwand.com/en/Negamax
https://thesai.org/Downloads/Volume5No5/Paper_10-A_Comparative_Study_of_Game_Tree_Searching_Methods.pdf
https://www.chessprogramming.org/Evaluation_of_Pieces
https://www.chessprogramming.org/Evaluation
https://www.cs.cornell.edu/boom/2004sp/ProjectArch/Chess/algorithms.html#board
https://www.chessprogramming.org/Main_Page
https://towardsdatascience.com/building-a-chess-ai-that-learns-from-experience-5cff953b6784
https://arxiv.org/pdf/1711.08337.pdf
https://stackoverflow.com/questions/40137240/training-of-chess-evaluation-function
https://arxiv.org/pdf/2007.02130.pdf
https://www.chessprogramming.org/Move_Generation
https://www.chessprogramming.org/Checkmate
https://www.chessprogramming.org/Bishop_versus_Knight#WinningPercantages
https://www.chessprogramming.org/Sensor_Chess#MoveGeneration
https://hxim.github.io/Stockfish-Evaluation-Guide/
https://www.chessprogramming.org/Repetitions
https://en.wikipedia.org/wiki/Threefold_repetition
https://www.chessprogramming.org/Opening_Book
https://www.chessprogramming.org/Pawn_Structure
https://www.chessprogramming.org/Time_Management
https://www.chessprogramming.org/Encoding_Moves#MoveIndex
https://lichess.org/page/accuracy
http://www.talkchess.com/forum3/viewtopic.php?f=2&t=68311&start=19
https://www.chessprogramming.org/UCT
https://www.codeproject.com/Articles/5313417/Worlds-Fastest-Bitboard-Chess-Movegenerator


----- Jeu -----

-> Promotions (de tous types plutôt que seulement dame)
-> Rajouter des tests de validité de FEN
-> Répétition de coups
-> Pouvoir naviguer dans l'historique des coups


----- Structure globale du projet -----

-> Séparer les fonctions du fichier board dans d'autres fichiers (GUI, IA...)
-> Faire du ménage dans les fonctions
-> Faire une classe pour les IA?


----- Optimisations à implémenter -----

-> Regarder quel compilateur est le plus rapide/opti
-> Algo Negamax -> copies des tableaux -> undo moves? ---> finalement plus lent?
-> Transposition tables
-> Algorithme MTD(f) <-> alphabeta with memory algorithm
-> stoi et to_string très lents?
-> Ajout de variables globales plutôt que les re définir lors des appels de fonction (valeur des pièces, positionnement...)
-> Parallélisation -> std::for_each avec policy parallel?
-> Au lieu de calculer l'évaluation à chaque coup, l'imcrémenter en fonction du coup
-> Dans le negamax, si y'a un mat, ne plus regarder les autres coups?
-> Optimiser le sort moves - l'améliorer (et l'évaluation?)
-> Remplacer des if par des &&
-> Vérifier que toutes les fonctions sont optimisées
-> Faire le triage des coups grâce aux itérations précédentes?
-> Fonction pour stocker facilement un noeud, ou savoir s'il est similaire à un autre? -> transposition tables
-> Incrémenter le game_over à chaque coup joué plutôt que de le regarder à chaque fois
-> Regarder si l'implémentation des échecs rend les calculs plus rapides
-> Ne plus jouer les échecs?
-> Copie des plateaux : tout copier? ou seulement quelques informations importantes?
-> Liste des coups légaux, et une autre liste pour les coups pseudo-légaux... pour éviter de les recalculer à chaque fois...
-> Utiliser les threads.. voir cours ProgrammationConcurrente
-> Checker SIMD code (pour optimiser)
-> Calcul de distance à un bord : simplement faire une matrice globale des distance pour chaque case, et regarder dedans -> https://www.chessprogramming.org/Center_Manhattan-Distance
-> Faut-il stocker les positions de certaines pièces (les rois par exemple), pour accélérer certains calculs?
-> Regarder dans les copies de tableau si on peut ne pas copier des choses, ou en copier plus...
-> Précalculer pas mal de choses si possible
-> Incrémentation de l'évaluation


----- Intelligences artificielles -----

--- Nouveaux algorithmes ---

-> Grogrofish_iterative_depth -
-> Changer Grogrosfish : depth -> temps (--> moteur d'analyse)
-> Faire une profodeur -> trier les coups du meilleur au pire, puis continuer la recherche plus loin
-> Agent_new = Agent_old++ -
-> Faire un agent qui gagne toujours contre un autre : regarde tous les coups, et joue pour chacun la partie jusqu'au bout en utilisant agent_old -> puis joue les coups qui gagnent
-> RE : multi_agents

--- Améliorations ---

- EVALUATION -
-> A ajouter :
	- Sécurité du roi (TRES IMPORTANT !) --> A améliorer: lignes ouvertes et colonnes ouvertes proches du roi (ou semi-ouvertes)
	- Structures de pions :
		- Pions arriérés
		- Pion faible sur une colonne semi-ouverte
	- Nature de la position :
		- Ouverte
		- Fermée
		- Semi-ouverte
	- Evaluation spéciale pour les finales :
		- Fous de couleurs opposées
		- Finales roi pion
		- Mat fou cavalier
		- Finales de tours: plus facilement nulles
		- ...
	- Clouages?
	- Cases noires/blanches -> faiblesse sur une couleur
	- Initiative -> A améliorer : fort dans les positions d'attaque?
	- Fous de couleurs opposées : favorisent l'attaque, mais en finale -> draw
	- Harmonie des pièces (qui se défendent entre elles)
	- Pièces enfermées
	- Bon/Mauvais fou
	- Tours sur une même colonne qu'une dame ou un roi
	- Pions bloqués / Développement de pièces impossible
	- Fous/Paire de fou meilleurs en position ouverte (cavalier : inverse)
	- Pièces défendues
	- Faiblesse sur une couleur
	- Vis-à-vis
	- Focales
	- Cavaliers bloqueurs
	- Finales de pions : Roi dans le carré
	- Garder les tours pour faire nulle
	- Clouage infini
	- Pression sur les cases et points faibles
	- Colonnes occupées par une dame
	- Pions passés liés !
	- Coordination des pièces
	- Candidats pions passés : r1bq2kr/ppp1bn1p/2n1p2P/3pP1PR/3P1p2/1NPB1N2/PPQ2P2/R3K3 b Q - 0 16 : ici y'aura potentiellement un pion passé colonne g ou h
	- King proximity : proximité du roi avec les pions passés (pour les aider à avancer) (prendre en compte aussi le roi adverse)
	- Pièces non protégées
	- Shelter strength : pions devant le roi (faiblesses long terme), quand le roi est déroqué
	- Shelter storm : attaques avec les pions sur le roi quand il est déroqué
	- "anaconda" : pièces bloquées à vie + avantage d'espace etc.. plans long termes
	- Concepts de pression: attaques additionelles en rayon X à prendre en compte. Doubler les tours sur une colonne, etc...
	- Tours: les mettre sur les colonnes ou les pions sont les plus avancés (activité verticale)
	- Plans?
	- Colonnes fermées -> tour mauvaises. Si beaucoup de colonnes ouvertes, bonus pour les tours. Pareil pour les diagonales et les fous
	- Pions passés: prendre en compte les contrôles des alliés pour pousser les pions
	- Règle des 2 faiblesses : si y'a 2 faiblesses attaquables, ça donne un avantage
	- Winnable? en endgame par exemple si on a qu'un fou on peut pas gagner
	- Redonner de la valeur pour la dame, car les tours on beaucoup d'évaluations différentes qui leur donnent de la valeur
	- Quand t'as une position stratégiquement mauvaise, il faut jouer dynamiquement (r1bq1rk1/ppn1bppp/3p4/2p5/2PP4/2N1BN1P/PP3PP1/R2Q1RK1 b - - 0 14 : là faut faire d5)
	- Proximité du roi avec les pions passés
	- Trapped pieces (https://www.chessprogramming.org/Trapped_Pieces)
	- Connectivity (https://www.chessprogramming.org/Connectivity)
	- Alignements
	- Piece coordination
	- Incremental evaluation (pour que ça aille plus vite)
	- Tour derrrière un pion passé (implémenter les cases controlées pour les pions passés?)
	- Ouvrir la position si on a un avantage de développement (roi adverse pas roqué, pièces pas développées)
	- Développer les cavaliers avant les fous
	- Favoriser les chevaux dans les positions fermées. Fous quand les diagonales sont ouvertes, tours quand les colonnes sont ouvertes (implémenter un bonus pour chaque?)
	- Attaquer la chaîne de pions
	- Moins de pions = moins de chances de gagner en finale
	- Tours liées, important
	- Colonne ouverte/semi-ouverte contre le roi adverse combiné avec diagonale ouverte = grand avantage (+2?)
	- Jouer du côté où la chaîne de pions pointe
 


-> Faire une policy pour les coups (ou des préférences de réflexion)
-> Livres d'ouvertures, tables d'engame?
-> Tables de hachages, et apprentissage de l'IA? -> voir tp_jeux (UE IA/IRP)
-> Iterative deepening pour grogrosfish
-> Améliorations pour trouver les mats les plus rapides... 
-> Ne plus regarder les branches finies de GrogrosZero?
-> Utiliser raylib pour le random? check la vitesse
-> Création d'une base de données contenant des positions et des évaluations? (qui se remplit au cours des parties...)
-> Allocations mémoires utilisant raylib?
-> Implémentation de bitboards
-> Changer la structure de données des boards pour réduire leur taille
-> Incrémentation de l'évaluation quand on joue les coups (make_move(keep))
-> Utiliser la librairie boost
-> Faire une liste séparée pour les legal et les pseudo-legal moves
-> Génération des coups de façon ordonnée? (captures en premier?)
-> Finir les undo
-> Mettre des options pour certaines fonctions pour ne pas faire les étapes inutiles (_last_move dans make_move??)
-> Faire une fonction pour initialiser un plateau (plutôt que le from_fen)
-> Faire que les undo gardent les calculs de GrogrosZero sur la position
-> Augmenter les poussées de pions en finale (les regarder en premier -> policy / move sort)
-> Faire une IA qui apprend tout seul? : update l'évaluation d'une position en fonction de la refléxion sur cette même position
-> Générer un arbre d'ouvertures !! :DDDD
-> Evaluation des pièces : prendre en compte les pièces protégées / attaquées? Pièces prenables?
-> Format du livre d'ouvertures : {(e4, fen, static_eval, dynamic_eval, nodes, {(e5, ...), (...), ...}), (d4, ...), ...}. où e4 = 1, 4, 3, 4
-> Pour l'utilisation du livre, re fabriquer un arbre?
-> Faire une table de hachage pour simplifier (et accélérer) la recherche des positions répétées
-> Pour l'historique des positions, on peut le reset à chaque coup de pion ou capture
-> Pour les transpositions, on peut peut-être renvoyer au même indice de plateau fils...?
-> Pour chaque plateau, générer et stocker la representation simpliste du plateau? Pour ensuite pouvoir aider les fils à comparer?
-> ATTENTION aux conversions int et float dans les calculs d'évaluations...
-> Mettre les règles de parties nulles et mat en dehors de l'évaluation?
-> Ajouter les pièces protégées/attaquées lors de l'évaluation pour simplifier les calculs de l'IA
-> Carré du pion en finales
-> Ne comprend pas les finales de bases (du au fait qu'il répète les coups?)
-> Regarder dag chess?
-> Faire une map des cases attaquées (ça peut rendre plus rapide les tests d'échecs)
-> OpenAI propose un diviser pour reigner pour paralléliser GrogrosZero
-> Est-ce plus rapide de mettre des boucles simples plutôt que double? while plutôt que for?
-> Endgame : la force des pièces dépend du potentiel des pions (pièces seules = bof)
-> Faire des tables d'attaque (par exemple entre roi et dame, cavalier...)
-> Refaire toute l'architecture avec les get_moves(), pour que ça prenne tout en compte (sans le faire dans l'évaluation)
-> Calculer l'avancement de la partie au fur et à mesure de la partie (au lieu de le faire à chaque fois)
-> GrogrosZero ralentit beaucoup quand les variantes deviennent longues
-> ----> Faire une recherche spécialement de mat, où on prend plus en compte le matériel??
-> Au fil de la réflexion, retirer les coups pourris?? pour augmenter la capacité de stockage...
-> Mettre une variable globale pour la règle des 50 coups (pour la passer à moins, si besoin)
-> Rechercher large au début, puis serré après??
-> Changer un peu l'algo, pour que ça ne joue pas forcément le coup auquel il a le plus réflechi, mais un autre si il semble être meilleur (quand c'est mat, facile, mais sinon, comment savoir?)
-> Attaquer les faiblesses
-> Quand Grogros joue un coup auquel il n'avait pas pensé.. les évaluations déscendent pour les coups, 1 par 1... comment faire pour que tout descende en même temps?
-> L'éval statique en position symétrique sera toujours nulle ?? (modulo le trait du joueur)
-> Puissance de la paire de fou qui dépend du moment de la partie? Qui dépend si y'a encore les dames pour compenser?
-> Découper la foncion draw en plein de sous-fonctions?
-> Chercher ce qui prend le plus de temps dans la GUI
-> Recherche de Grogros : utiliser UCT
-> Tester Grogros sur les leçons stratégiques de chess.com
-> Mettre des static const un peu partout pour éviter les re définitions inutiles
-> Faut-il prendre en compte le nombre de noeuds dans un fils pour déterminer s'il faut regarder dedans?
-> Ordonnencement des coups : checks/captures/attacks
-> Dans les positions ou des pièces peuvent être capturées, Grogros évalue très mal (quiescence depth trop faible)
-> Retirer les espace dans les parsing de FEN (ou autres caractères non désirés)
-> Passer tous les commentaires en anglais et clean le code?
-> Evaluations en finales : un cavalier seul sans pions ni rien = nul
-> Mettre les noms de version sur le nom de Grogros
-> Utiliser toutes les améliorations/optimisations possibles sur VisualStudio
-> Mettre des uint_fast8_t partout
-> Negamax : utiliser les plateaux tout faits du buffer?
-> Mettre des variables globales partout !
-> Virer les attributs inutiles des plateaux
-> Faire une fonction qui regarde si un coup est légal
-> Regarder et virer toutes les conversions de int à float, et opérations entre int et floats
-> Position à tester : GrogrosZero vs Grogrosfish : 
	-> r1bqkb1r/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1 : sans cavaliers
	-> rn1qk1nr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1 : sans fous
	-> 1nbqkbn1/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w - - 0 1 : sans tours
	-> rnb1kbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1 : sans dame
	-> rnbqkbnr/8/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1 : sans pions
-> Faire des pre-calculs dans des constantes (genre des divisions), pour éviter de les faire à chaque fois
-> Mettre des flags pour les coups (capture, check, promotion -> caval possible??)
-> Descendre un peu le winrate par éval? réference : +1.00 = 50% de chances de gain
-> Quels paramètres sont meilleurs pour GrogrosZero? k_add? beta? quiescence_depth?
-> Utiliser std:sort pour trier les coups plus rapidement?
-> Alignement de pièces à finir (tour/roi, tour/dame...)
-> Taper les faiblesses (notions de pression)
-> Réduire la puissance des fous : un cavalier bien placé peut être tout aussi bon -> Outpost
-> Utiliser la map de contrôles pour les fonctions dans l'évaluation
-> Quand l'arbre est trop plein : élaguer les branches pourries, pour se concentrer sur les plus prometteuses
-> Faut-il vraiment regarder tous les coups d'une position avant de chercher plus loin??
-> Evaluer les finales différemment : faires des fonctions exprès pour (carré du pion, mat fou cavalier : il faut aller dans le bon coin)
-> Optimiser la mémoire de Grogros
-> Ajouter la nature de la position : ouverte, fermée... pour savoir à quel point les fous/cavaliers sont meilleurs, si y'a des chances de gain, si le développement des pièces compte beaucoup... l'espace aussi, la sécurité des rois...
-> Améliorer l'implémentation de l'activité des pièces : peuvent pas vraiment se déplacer sur des cases pourries...
-> Pour mieux évaluer la sécurité du roi, il faut regarder le surnombre de pièces sur le roi adverse (+2, c'est généralement mat)
-> Pourquoi dans les Caro-Kann, il fait Fd3 pour reprendre du pion c plutôt que de la dame?
-> Faire que Grogros reclique sur la fenêtre principale après jouer son coup sur chess.com pour reprendre la main? ou alors faire un focus sur la fenêtre?
-> Utiliser des static constexpr pour éviter des calculs redondants dans certaines fonctions
-> Il faut plus de g3 Fg2 -> revoir king safety?
-> Re utiliser la réflexion de la quiescence search pour la recherche normale
-> Faire evaluation.cpp? gui.cpp?
-> Comme pour le roi, garder en mémoire l'emplacement des pièces (utiliserait 256 bytes)
-> Afficher seulement les paramètres d'évaluation qui font sens? (par exemple king opposition seulement lorsque c'est une finale de pions)
-> Tout foutre dans la classe GUI? les variables globales et fonctions globales en particulier -> par exemple eval_components
-> Adapter les fonctions aux coups (make_move(Move)...)
-> Faire des méthodes utiles pour les coups
-> Verifier que quiescence depth 0 est aussi rapide qu'une simple évaluation
-> Flags pour les coups
-> Rendre from_fen plus tolérant
-> Améliorer l'évaluation en faisant jouer contre Leela, et regarder ce que Grogros évalue mal
-> Eviter les accès à _moves[i] trop souvent? -> copier le coup?
-> IMPORTANT : refaire toutes les recherches de mat, et leur stockages
-> Faire le threading !
-> Faire un king_centralization pour l'endgame?
-> Voir comment gérer les positions qui sont mal évaluées par GrogrosZero
-> Implementer les policy pour les coups (pour regarder des coups plus que d'autres)
-> Pion de moins en finale de pions est quasi toujours perdant
-> Ajouter la pièce dans le coup (et l'utiliser)
-> Revoir les undo, et les faire rapides pour les utiliser au lieu de copier les plateaux
-> Faire des tests de vitesse pour l'évaluation
-> Evaluation endgame très mauvaise
-> Quand une position est surestimée, Grogros va jouer des coups pour retarder l'échéance, mais qui peuvent pourrir la position encore plus
-> Quand une position est sous-estimée, Grogros va jouer un coup qui parait bien et réfléchir beaucoup dessus, même si d'autres variations peuvent être meilleures
-> Revoir negamax
-> Utiliser sort c++ pour trier les coups
-> Rajouter les coups du quiescence dans monte-carlo, et inversement... -> mettre le quiescence dans MCTS?
-> Remettre la dame dans la mobilité des pièces et l'activité? pour que ça développe la dame aussi? Sinon, ça évalue mal ces positions: r1b1kbnr/ppqp1ppp/2n1p3/8/3NP3/2N5/PPP2PPP/R1BQKB1R w KQkq - 1 6 
-> r1bqkb1r/ppp2ppp/2n1p3/8/3PP3/2P5/P4PPP/R1BQKBNR w KQkq - 0 7 : piece_mobility seulement +0.18? c'est un bug?
-> Dans la recherche de grogros_zero, regarder en priorité les coups forts et peu regardés
-> Detection plus rapide d'échecs et mat
-> Regarder où on fait des accès mémoire fréquent et faire des copies locales pour aller plus vite?
-> Refaire la partie sur attacks and defenses... pour que ça soit plus précis.. là si on tape un pion protégé, ça fait un bonus...
-> Lorsqu'une position est mal évaluée, ajouter une constante de correction d'évaluation pour toutes les positions résultantes (ou jusqu'à ce que l'évaluation soit bonne)
-> King safety, safe checks: FIXME -> ça prend pas en compte les échecs à la découverte, ni les échecs par clouage
-> Faire quelques playoff jusqu'au bout pour avoir une idée de la nature de la position??
-> Fix pawn push threat : quand la case est controllée...
-> Passer la quiescence à depth 8 ou +? sinon y'a encore des positions mal évaluées... à voir si on peut réutiliser les noeuds de la quiescence pour la recherche normale
-> Créer une classe 'arbre' pour les recherches de GrogrosZero?
-> 6k1/4pp1p/P2p2p1/8/4P3/1P6/5PPP/6K1 b - - 0 26 : il faut améliorer king proximity avec les pions passés: le roi est clairement pas dans le carré
-> Constructeur de coups à partir d'un string
-> Passer les fonctions d'évaluation dans evaluation.cpp
-> Changer tous les play_move(i) en play_move(move)
-> Il faut vider l'historique des variantes quand on change de position... faire une méthode pour reset?
-> Mettre plus de choses dans GUI.cpp
-> Refaire le tri des flèches
-> Refaire toutes la fonction de dessin de la GUI (notamment pour clarifier les sélections.. puis faire les pre-moves..., draw arrow...)
-> Rajouter 'overwrite' en paramètre de la génération de coups
-> Ne pas jouer le coup quand un autre est en train de devenir meilleur?
-> Changer l'activité des pièces? -> Faire comme pour les tours, regarder en fonctions des pions qu'il y a devant?
-> Punir la perte des droits de roques -> si le roi est au milieu
-> Structure de pions (connected -> -?)
-> King safety en endgame -> wtf parfois
-> 7k/4r3/5pBP/p1n5/P6P/1P2PK2/5P2/8 b - - 3 51 : king safety??????
-> Rajouter des comtempt: valeur qui dépend de l'adversaire, et qui définit à quel point tu acceptes les nulles (et tente des pièges?)
-> Faire une structure pour la recherche de MonteCarlo (arbre avec noeuds)
-> Bishop pawns: retirer une part de la pénalité quand le fou est devant et protégé par un de ses pions?
-> FIXME : pour l'activité des tours, parfois Grogros va faire un Th7 pour se déroquer (car il pense que sa tour ne sera plus bloquée). Il faut fix à tout prix
-> Souvent, Grogros dépasse le centre pour rien, et ça crée des faiblesses et ne sert à rien (il faudrait mieux se développer à la place...). Contre les double fianchetto, ce genre d'erreur est fatal
-> Utiliser des émoticones pour les pièces d'échec? \u2656xb5 plutôt que Rxb5
-> Faire des plus petites allocations de buffer pour aller plus vite? et re allouer de la mémoire si on a rempli le buffer?
-> Faire un truc sur la mobilité totale des pièces? qui ressemble à un logarithme? -> t'as pas de coups -> eval: -inf, t'as k coups -> eval: 0, et ça augmente en log
-> Utiliser Texel tuner pour rectifier l'évaluation?
-> Mettre les fous sur les diagonales ouvertes (voir comme on fait pour les colonnes des tours)
-> 2b3k1/4bp2/3p1n1p/PP4p1/4P1P1/3BBP2/5K1P/8 w - - 1 36 : les pions connectés fonctionnent bien?
-> Heuristique pour à quel point le roi est proche de roquer?
-> Heuristique d'ouverture de la position -> draw ou non
-> Grogros peut améliorer sa gestion du temps en en prenant un peu plus en fin de partie s'il lui en reste beaucoup. Prendre en compte aussi le temps de l'adversaire?
-> Rajouter les pions passés soutenus par une tour derrière
-> En finale contre fou, mettre les pions sur la couleur opposée au fou
-> Parfois il fait Fb2 dans le pion c3
-> Remettre toutes les conditions pour determiner le temps pour jouer dans la fonction prévue pour
-> Beaucoup de choses peuvent être factorisées dans le main_gui (get_orientation() par exemple)
-> BUG: quand on lance les threads de Grogros lorsque le buffer est plein, ça plante
-> BUG: parfois grogros crash... à cause d'avoir retiré le plateau principal du buffer?
-> Comment faire pour connaitre l'origine d'un crash?
-> Il faut des classes pour l'évaluation (mettre toutes les fonctions dedans), pour l'algo de GrogrosZero (dont un arbre de recherche...)
-> Weak squares: faire de manière plus progressive? (un pion qui contrôle c'est ok, deux c'est mieux...)
-> get_safe_checks() -> prend 90% du temps de l'évaluation...
-> BUG: parfois après une repetition 1 fois, Grogros choisit un coup complètement pourri et en est sûr (perdant) : ça arrive encore?
-> Pour tester les versions de grogros, faudrait que je fasse une fonction qui le confronte à un certain nombre de puzzles/evaluations et voir combien il en réussi pour lui donner un score. (utiliser ça aussi pour entraîner les réseaux de neurones?)
-> BUG: parfois, grogros stoppe le temps en pleine partie (il pense que la partie est finie??)
-> Pour get_zobrist _key, regarder si on ne le fait pas trop souvent
-> Dans les finales, il faut évaluer comment on peut avancer ou non... sinon il voit pas quand y'a des égalités...
-> Gros problème de compréhension: r6r/p1p1kp1p/3p3q/2p1P3/6Q1/3B4/PP3P1P/2R2RK1 w - - 1 20 il voit pas la menace des noirs sur la dame et le roi
-> 2r2k1r/pp2npp1/3p1n2/q3p2p/4P3/2PB1Q2/P1PB1PPP/R4RK1 b - - 1 16 : ici faut faire quelque chose pour que Th7 n'augmente pas l'activité de la tour d'autant. (pour le moment c'est à cause de la condition sur la tour bloquée par le roi dans le roque)
-> 8/6B1/7p/7b/p7/1k2KPP1/1P6/8 w - - 0 39 : Grogros devrait savoir comment gagner ça quand-même (il a raté...)
-> Il est relou avec ses Th7 pour se déroquer...
-> Définir des concepts positionnels actifs et passifs (court terme et long terme), puis leur donner une valeur en fonction de la nature de la position (position ouvrte -> actif, fermée -> passif)
-> Les pions faibles le sont encore plus lorsqu'ils sont bloqués par des pions adverses


----- Interface utilisateur -----

-> Faire un readme pour les contrôles
-> Amélioration des sons (en faire des maison?)
-> Nouveau sons/images
-> Dans le negamax, renvoyer le coup à chaque fois, pour noter la ligne que l'ordi regarde?
-> Faire des boutons pour faire des actions (ex copier ou coller le FEN/PGN, activer l'IA ou la changer...)
-> Options : désactivation son, ...
-> Chargement FEN -> "auto-complétion" si le FEN est incorrect
-> Régler le clic (quand IA va jouer), qui affiche mal la pièce (grogrosfish)
-> Modification de l'incrément dans la GUI
-> Interface qui ne freeze plus quand l'IA réfléchit -> Paralléliser
-> Sons pour le temps
-> Premettre de modifier les paramètres de recherche de l'IA : beta, k_add... (d'une meilleure manière)
-> Musique de fond? (désactivable)
-> Ajouter un éditeur de positions (ajouter/supprimer les pièces)
-> Utiliser 1 thread pour gérer l'affichage tout seul
-> Undo doit retirer le coup du PGN aussi
-> Afficher les textes avec des différentes couleurs pour que ça soit plus facile à lire
-> Défiler la variante quand on met la souris dessus
-> Montrer sur l'échiquier quand la position est mate (ou pate, ou autre condition de fin de partie)
-> Faire un reconnaisseur de position automatique
-> Unload les images, textures etc... pour vider la RAM?
-> Pouvoir changer les paramètres de l'IA dans l'UI
-> Ajouter des options/menus
-> Pouvoir sauvegarder les parties entières dans un fichier (qui s'incrémente), pour garder une trace de toutes les parties jouées
-> Analyses de MC : montrer le chemin qui mène à la meilleure éval, puis celle qui mène au jeu qui va être joué
-> Pouvoir grab le slider, ou cliquer pour changer sa place
-> Faire des batailles entre différents paramètres d'évaluation pour voir la meilleure config -> Retour des batailles de NN?
-> Importation depuis un PGN
-> Afficher sur le PGN la reflexion de GrogrosZero
-> Pouvoir changer le nombre de noeuds de l'IA dans la GUI... ou la profondeur de Grogrosfish
-> Parfois l'utilisation des réseaux de neurones bug
-> Nd2f3 -> Ndf3? pas facile à faire
-> Ajouter la possibilité de faire plusieurs pre-move
-> Faire du smooth sur la barre d'évaluation
-> Faire un graphe d'éval en fin de partie?
-> Mettre des + sur les flèches (comme il y'a des -...)?
-> Faire un fonction pour tranformer une éval en son texte (mat ou non)
-> Certains calculs sont peut-être en double dans l'affichage
-> Echelle logarithmique pour la barre d'éval?
-> Gestion du temps bizarre? Car le temps affiché par GrogrosZero n'est pas vraiment le vrai (ni sa vitesse)
-> Clean l'implémentation de la GUI -> Faire des nouvelles fonctions pour tout simplifier
-> Faire un vecteur pour les pre moves et les flèches
-> Fins de parties : message + son
-> Dans une position que GrogrosZero sous-évalue, jouer le coup auquel il a le plus réflechi. dans le cas contraire, jouer le coup avec la meilleure éval
-> Barre d'éval : barre pour l'évaluation du coup le plus recherché par l'IA? ou éval du "meilleur coup"?
-> Mettre le screenshot dans le presse-papier?
-> Faire un truc pour montrer la menace (changer le trait du joueur)
-> Pouvoir éditer les positions
-> PARALLELISER L'AFFICHAGE !! ça lag beaucoup trop !!!
-> Refaire les pre-moves depuis zéro (et ajouter la possibilité d'en faire plusieurs)
-> Trop de flèches = crash
-> Lignes de bézier et cercles pas très beaux
-> Nouveaux bruits de pièces plus "soft" + bruit d'ambiance?
-> Montrer toute la variante calculée avec des flèches (d'une couleur spéciale)
-> Thread : bug... parfois les coups joués ne sont pas les bons
-> Re foncer le noir des pièces?
-> Pourquoi dans certaines variantes, l'éval ne s'affiche pas à la fin??
-> Dans les .h, remettre les noms des arguments?
-> Rajouter des pre-moves pour Grogros si c'est un coup forcé en face
-> Pourquoi c'est lent de changer la taille de la GUI?
-> Pour la barre d'éval, on utiise le winrate?
-> Faire des maps pour afficher les paramètres d'évaluation (genre afficher les cases controllées, avec une couleur plus ou moins prononcée...)
-> Pouvoir facilement changer les paramètres de Grogros (quiescence depth, beta, k_add, paramètres d'évaluation...)
-> Pouvoir changer l'affichage de la GUI (winrate/eval)
-> Faire des menus
-> Désélectionner les pièces lors d'un chargement de position
-> Utiliser des checkCollision de raylib pour la GUI
-> Afficher l'incrément de temps sur la GUI, et pouvoir le modifier
-> O-O+ dans les move label à prendre en compte
-> Revoir les update du temps quand on le change pendant que ça joue
-> Afficher des traits autour du plateau chess.com?
-> Affichage de la réflexion de Grogros sur le PGN : {N: 10.29% of 544}
-> Revoir le compare moves (sinon ça affiche pas toujours le meilleur coup au dessus)
-> Adapter nodes_per_frame en fonction du temps de réflexion de GrogrosZero (tant que la parallélisation n'est pas faite)
-> Montrer l'incrément sur la GUI
-> Afficher le titre et l'elo des joueurs sur la GUI
-> Revoir le tri des coups pour les flèches de GrogrosZero, car parfois ça ne se trie pas bien
-> Afficher différement la pièce sélectionnée (et au dessus des autres pièces)
-> Faire des animations de Grogros qui bouge les pièces
-> Quand on joue un coup (en appuyant sur p ou autre), il faut désélectionner la pièce
-> Refaire la réflexion de GrogrosZero: quand il y a beaucoup d'incertitude dans l'éval, regarder large. Sinon, regarder profond
-> Mobilité verticale ~= activité pour les tours?
-> Vérifier qu'il n'y a pas d'int overflow dans la sélection des coups (softmax...)
-> rnb2bnr/pppp1k1p/5q2/8/5p2/2N1BQ2/PPP3PP/R4RK1 b - - 3 11 : il évalue mal, et teste les coups 1 par 1 et se rend compte que ça va pas... beaucoup trop lent à ré évaluer la position correctement.
-> Changer l'affichage du plateau en fonction de l'arbre de jeu, et le fils principal (surligner le coup)
-> Barre d'éval : afficher l'éval du coup le plus recherché par l'IA? ou éval du "meilleur coup"?
-> Time management: faire en fonction de la différence entre le meilleur coup et les autres pour jouer plus vite? Debug pour voir si tout fonctionne bien
-> Afficher l'endroit où on en est dans la variante, pouvoir cliquer dessus, changer les variantes
-> Dé-surligner le coup quand on navigue dans les coups
-> From_fen -> reset l'arbre
-> Surligner le coup principal de la variante
-> Parfois des positions buggent quand on navigue.. ça affiche des pièces en énorme (à cause de la réflexion de Grogros qui a supprimé le coup?)
-> Remettre les chronos dans le PGN généré par l'arbre (et les noeuds, et d'autres notations?)
-> Garder les réflexions de GrogrosZero quand on navigue dans les coups
-> Passer une variante en principale
-> Montrer quand une ligne d'analyse est montante ou descendante
-> Parallélisation: faut que les quiescence nodes augmentent aussi
-> Quand on navigue dans la partie, jouer les son
-> Afficher en vert, orange ou rouge les forces et faiblesses de la positions?
-> Afficher à quel coup de la variante on est
-> Ré-afficher un peu mieux les variantes et avec plus de détails (profondeur...)
-> Affichage du temps dans le PGN
-> Mettre des flèches pour indiquer les coups de la variante principale?
-> Inclure la proba de nulle dans la barre d'éval
-> Au chrono, il met 1min60 au lieu de 2min
-> Améliorer le PGN (temps, noeuds, éval...)
-> Améliorer le visuel des pièces uft8
-> Colorer les cases en fonction des bonus de chaque pièce?


----- Grosses implémentations à faire -----

-> Table de transposition
-> Bitboards
-> Réseaux de neurones: tester des matches avec 0 réflexion, seulement le coup proposé par le réseau?
-> Parallélisation (possible sur le GPU?)
-> Policy pour les coups
-> "Killer moves", ou gestion des menaces
-> Arbres de variations / Chargement de PGN
-> Livre d'ouvertures
-> Beaucoup de vérifs à faire dans les fonctions principales (make_move, grogros_zero, get_moves...)
-> Buffer de coups pour éviter de les stocker dans les plateaux


----- En cours -----

-> Essayer de laisser Grogros trouver des plans? pour structurer le jeu et donner les idées / coups forts. Le faire jouer plusieurs coups à la suite pour qu'il trouve le plan?
-> Implémenter les killer moves? quand un coup est fort à une certaine profondeur, le favoriser dans les autres branches?
-> Implémenter le concept de faiblesses

-> BUGS:
1k2r2r/p1pqb1pp/2ppbn2/6B1/3NP3/2N5/PPP1QPPP/R4RK1 w - - 0 13 : Da6???????????
Qnkr3r/1p3ppp/3bq3/3p4/3B4/2P5/PP1N1PPP/R4RK1 w - - 6 16 : comprend rien à cette position... aucun bon coup n'est regardé
Qnkr3r/1p3pBp/3bq3/3p4/8/2P5/PP1N1PPP/R4RK1 b - - 0 16 : Thg8 gagne
Qnkr2r1/1p3p1p/3b4/3p4/3B4/2P3Pq/PP1N1P1P/4RRK1 b - - 0 19 : Fxg3!! gagne
1nkr4/1p4rp/3b2q1/3p4/Q4p2/2P2NP1/PP3P1P/4RRK1 w - - 0 21 : roi noir foutu
r1bqk1nr/pppp1ppp/2n5/8/1bB1P3/2P2N2/P4PPP/RNBQK2R b KQkq - 0 6 : Fa5??.. :(
r1b2bkr/pp2Rppp/2q2n2/2p5/2B5/2N2PP1/PP2Q2P/R1B3K1 b - - 8 19 : Fxe7??
3rkb1r/pQ1b1ppp/2pp4/4q3/4n3/3N4/PPPBBPPP/R4RK1 b k - 1 14 : il a fait Df6 au lieu de Db5 après avoir vu que Db5 était meilleur...
r4rk1/ppq1bppp/5n2/3p4/8/3P4/PPP1QPPP/RNB1K2R w KQ - 3 12 : roqueeee!!!
Y'a des gros soucis avec le temps.. parfois il s'écoule quasi plus.......... (quand on lance GrogrosZero par itérations p.s. plutôt que par noeuds p.s. ...)
r1b3k1/1p3rpp/p4b2/4p3/q1B1N3/2Q5/2P3PP/5RK1 w - - 2 23 : Cxf6+??...
Parfois la couleur bug, ça oscille entre bleu et magenta sur une repet
Vérifier la profondeur des variantes. Est-elle bonne?
2k5/pr4pp/2p1p3/3p1bN1/q2P4/2P1R3/3Q1PPP/6K1 b - - 4 22 : Tb2 gagne -> il voit pas vraiment à cause de la quiescence qui update pas, car la variante n'est pas considérée comme full_explored, même si elle est forcée
r1bk3r/pp1nq2p/4p3/3pP2Q/3p4/1N1B4/P5PP/R4RK1 w - - 7 22 : il faut jouer Tf7!!
6k1/ppp2ppp/2n5/5b2/8/P1QBqNbP/1P1N2P1/R4K1R w - - 0 18 : pourquoi +280 en attaque
r1bq1r2/pppp1ppk/2n1p3/3nP1b1/3P3P/8/PPP2PP1/RNBQK2R w KQ - 0 9 : il regarde pas hxg5???
r1bq1rk1/2p1ppbp/pn1p3B/1p5p/3PP3/2N2P2/PPPQ2P1/2KR1BN1 w - - 0 12 : Dg5 c'est mat en 2 imparable.. il met combien de temps à le voir?...
r1bq1rk1/2p1pp1p/pn1p1npQ/1p6/3PP1P1/2N2P2/PPP5/2KR1BNR w - - 2 4 : e5??
rn2k1nr/ppp1ppbp/6p1/8/3Pq1b1/2P1BN1P/PP3PP1/RN1QKB1R b KQkq - 0 7 : il regarde pas Fxf3??
2r3k1/6p1/8/5p1p/4nP2/R1BRP3/2P1K2P/1r6 b - - 3 39 : il voit pas Th1+?
2r3k1/6p1/8/5p1p/4nP2/R1BRPK2/2P4P/7r b - - 5 40 : Txh2??
Après une répétition, Grogros ne joue plus
Revoir les promotions de variantes etc...
Parfois quand on joue 2 fois un même coup dans des variantes différentes, ils ont le même parent... du coup quand on revient en arrière, ça va au mauvais endroit
2r3k1/pp1n3p/3P2pB/2pr1q2/P2nN3/1P4Q1/R1P2PPP/4R1K1 b - - 8 26 : ici après Ce2+ Txe2 Te1+, la quiescence s'arrête alors que le joueur est en échec
Parfois il ne joue pas le coup qu'il pense être le meilleur? r2qk1nr/ppp1pppp/2n5/8/3Pp1Q1/2P5/PP3PPP/R1B1KB1R b KQkq - 0 4 : ici il a joué Rf8 plutôt que Cf6... (après avoir vu que Cf6 était meilleur)
Quand y'a plusieurs eval de mats, il joue lentement, car les evals sont relativement proches?
r1b1k1r1/pp1npp1p/1q4p1/2p5/4B3/2P1BN2/Pb1Q1PPP/3R1RK1 w q - 0 16 : juste Tb1??
Auparavant, il prenait plus de temps pour réflechir quand les positions étaient complexes (car il jouait en fonction du nombre de noeuds "quiet")
2Bk1b1r/1p4pp/p1q2p2/3pn3/3B4/7Q/PP1N1PPP/3bR1K1 w - - 1 21 : Fe6 quand y'a pas les échecs de regardés? Txd1 sinon?
rnbqk1nr/ppp2ppp/3b4/8/3P4/8/PPP1P1PP/RNBQKBNR b KQkq - 0 4 : Dh4+??
8/q1p2kp1/3bp2p/4p3/1pP1P3/rP2RNPP/2Q2PK1/8 w - - 3 31 : Ta2 arrive et c'est foutu si laissé!
Parfois y'a des game reset...
3r1rk1/1p2p1b1/8/p1pp1p2/P2P4/1PP1P1R1/4Q3/R3KN1q w Q - 0 30 : faut roquer!!!!! -> vis à vis roi/dame => tour/dame
k2r2nr/q6p/6p1/3P1p2/3Q4/5p2/PR2N1PP/4K2R w K - 0 23 : faut prendre h8!!

NEW BUG:
Parfois on a des eval qui sont égales à +/-INT_MAX, et ça ne devrait pas être le cas...
Tout refaire la quiescence en mode debug pour clarifier...

NEXT:
-> Transpositions
-> Bugs de repétition pendant une partie (-> on a un child associé avec null move?? -> crash)
-> Augmenter vitesse d'évaluation
-> Refaire l'activité des pièces?
-> Taper les faiblesses!!
-> REFAIRE KING PROXIMITY
-> Weak squares peut-être à revoir
-> Winnable endgames
-> Refaire l'algorithme pour qu'il évalue seulement les positions complètement planes (pour éviter les grossières erreurs d'évaluation)
-> Faire en sorte que l'algo recherche comme un humain...
-> Finaliser bloquages de pions passés (dame qui bloque est pour le moment pire qu'un contrôle qcq...)
-> Activité de la dame (pour les milieurs/fins de partie?)
-> Trop de choses à modifier pour trapped pieces (les attaques ne sont pas toujours des menaces...)
-> Pour la win_chance, faire en fonction du déséquilibre de la position: même si on a plus beaucoup de pièce, si on menace des mats, on a une bonne chance de gagner (y'a beaucoup d'inceritude dans l'éval)
-> Rajouter l'incertitude dans l'éval?

URGENT:
6R1/5p2/5kp1/2q5/pp4B1/2n1R3/5PKP/8 b - - 5 45 : roi noir pas en danger
1k1r3r/p2np1bp/Ppp1qp2/6p1/3PP3/2NNQ3/1PP3PP/R4RK1 w - - 0 19 : a6 est une vraie épine pour le roi noir
r1b1k2r/ppp2pp1/2p5/4q3/3bP1p1/2N4P/PPP2PP1/R1B1QRK1 w kq - 0 12 : ici y'a une ligne semi ouverte avec une tour dessus, c'est fort...
r1br2k1/pp2pp2/6pB/4n2Q/2qpB3/6R1/2P2PP1/4R1K1 b - - 5 21 : c'est quasi mat ici, beaucoup de pièces en attaque
8/pp4p1/5p2/2Pkp1p1/P1n5/2BKPP2/6PP/8 b - - 2 40 : king proximity à fix, sinon il hésite même à prendre le pion...
r2r4/7Q/1p1q2P1/2b3k1/5pP1/pP2pP2/7P/1K6 w - - 19 16 : ici il met 0 réflexion sur les autres coups que Dh5 dont il connait le résultat.. il itère sur une branche "morte".. il faut regarder les autres coups aussi
rnb1kb1r/pppp1ppp/5n2/8/4q3/5N2/PPPPBPPP/RNBQK2R b KQkq - 1 5 : déjà il est chiant à faire Fd6.. ça augmente l'attaque sur le roi.. ?? il a peur de faire d5??
-> Iterations <= 0 dans GrogrosZero /!\
2rq1rk1/1p1b1pp1/p1n2b1p/P2p3n/1P4P1/2PB1N1P/1Q1N1P1B/R2R2K1 b - g3 0 21 : cavalier enfermé
2r1brk1/6bp/p2pPpp1/qppN4/8/1P3NP1/P1Q2PP1/4RBK1 b - - 1 25 : blancs quasi gagnants: grosse case en d5, pion e6 très fort (passé + contrôle des cases). case faible plus forte quand elle bloque un pion? d3 et d4 sont considérées comme faibles pour les blancs... à revoir. pas vraiment de plans pour les noirs. pas de faiblesses pour les blancs
8/2p3p1/p1p5/P1P3p1/1P4P1/1K3k2/8/8 w - - 2 69 : fix king proximity!!
5rk1/Qbp2pp1/1pq1p2p/3p4/8/P1P1P3/2P2PPP/R3R1K1 w - - 0 21 : la dame est enfermée.. trapped pieces??
r2q1rk1/4bppp/2P1p3/p1np4/P7/4P3/1BP2PPP/RN1Q1RK1 b - - 0 14 : il dit que y'a du Dd4 sur chaque coup, et ne regarde jamais plus loin (en fait y'a Ff6 derrière...). Les noirs sont mieux
2q2rk1/2r3pp/4pb2/1p2p3/1P2B3/P4P2/1B4PP/3RQ1K1 w - - 4 29 : ici les tours sont meilleures que les fous.. les noirs sont gagnants
r2qk2r/pb1pbpp1/1pn4n/2p1P2p/8/2NB1N1P/PP1BQPP1/R3R1K1 w kq - 1 13 : la tour, tu la mets en d1, pas c1!... (à cause de piece mobility)
rn2k1r1/8/2p1bp1p/1p1qp3/5p2/pPbP1NP1/P1BNQP1P/1R3KR1 w q - 0 22 : Ce4 gagne...
r3k1r1/3n4/2p1qp1p/1p2p3/1P3p2/p1NP1NPb/P1B1QPRP/1R3K2 b q - 0 25 : blancs gagnants (clouage fou-tour mal jugé?)
r3k1r1/3n4/2p1qp1p/1p2p3/1P3p2/p1NP1NP1/P1B1QPKP/1R6 b q - 0 26 : blancs gagnants
1r3r2/1nqb2bk/3p2pp/3Ppp2/p1P5/2BB1N1P/3Q1PP1/R3R1K1 w - - 0 29 : noirs gagnants
1r1nqr2/p3ppbk/1p1p2pp/3P4/bP6/3BBN1P/2PQ1PP1/1R1R2K1 w - - 0 20 : b5 enferme le fou -> même si c'est pas en a8, il est enfermé
r1bk1b1r/pp4pp/2p2n2/3p1p2/3B4/2NB4/PPP2PPP/3RR1K1 w - - 0 15 : égal
-> 3rk1r1/ppp2p1p/1b2b3/8/1P3Q2/2q5/P2N1PPP/3RKB1R b K - 1 17 : foutu pour les blancs
-> Quand y'a plein d'options équivalentes, pas besoin de passer trop de temps pour décider laquelle choisir... Réfléchir un max sur les positions critiques (quand y'a des prises, poussées de pions, échecs...)
3r2k1/1q1n1ppp/2p3b1/p1P3N1/PrPB4/6PP/R2N1PB1/2Q3K1 w - - 3 29 : ici Rh2 est urgent! il y a une grosse ligne ouverte sur le roi.. remettre virtual_mobility?
-> Implémenter les plans (on regarde des coups à la suite, sans que l'autre joueur ne joue)
-> Si pas de plan posisble, gros malus (= zugzwang long terme?). Exemple: 2Rnk3/3p2p1/3Pp2r/1b2P1Np/7P/5P1K/6P1/8 b - - 1 43
1R1nk3/1b1p2p1/1K1Pp2r/4P1NP/6P1/8/8/8 b - - 14 53 : les noirs sont foutus
r4rk1/1ppqbpp1/p1n1b2p/3p4/3P1B2/2PB1N2/PPQ2PPP/2R1R1K1 w - - 1 15 : ici, les +300 sur le roi noir à cause de la batterie dame/fou, ça casse tout...
3brrk1/1ppq1pp1/p6p/3pB3/3P1Pb1/2PBR1P1/PPQ4P/4R1K1 w - - 1 21 : les noirs sont quasi gagnants.. le roi noir est safe
r2qr1k1/pp3ppp/5n2/2b1n3/2P1pNP1/1PNb3P/PB1P1PB1/R2QKR2 b Q - 5 15 : king safety?? le roi blanc est foutu...
r2qr1k1/pp3ppp/5n2/2b5/2P2NP1/1PNb1p1P/PB1P1P2/R2QKR2 w Q - 0 17 : ...
-> King safety: open lines: ++quand y'a une tour dessus
-> Rajouter les lignes horizontales ouvertes (faiblesse première rangée, ça arrive souvent)
-> Gérer quand le buffer est plein
1rb4r/2pn1kb1/p2p1p1q/P2PpPp1/2P1N3/2B1PB2/6QP/1R3R1K w - - 8 32 : Fb2??? mais prends cette tour en b8!!!
7r/2pb1kb1/p4p2/P1pPpPp1/2P1P2q/2B2B2/6QP/4R2K w - - 1 40 : vas en b1, pas g1!!
7r/2pb1kb1/p4p2/P1pPpPp1/2P1P2q/2B2B2/6QP/6RK b - - 2 40 : le roi noir est safe... diags, y'a R (la pos est fermée)
1r1qr3/5p1k/3p1Ppb/p2N3p/2pPP2P/2Pn3B/P3QR2/5RK1 w - - 1 22 : attaque +500 pour les blancs??... à causes des attaques sur f5 et h5?
-> Pour les overload, on a retiré les rayons X à travers les pions. faut-il les garder dans le cas où le pion attaque directement une pièce sur la diagonale?
-> Refaire toute l'activité des pièces? en fonction des pions plutôt, et pénaliser les pièces qui sont bloquées par les pions adverses? -> vrai trapped pieces...
2bq1k1r/br3p2/p2p2n1/npp1p2p/4P1pP/2PPN1B1/PPBN1PP1/R3QR1K w - - 0 1 : il veut Rg1, alors que le roi est mieux en h1 ?? rook activity augmente quand on le fait...
r1bqr1k1/pp3p2/4pn1p/2P3p1/1P1N4/3B2P1/P4PP1/R2QR1K1 b - - 0 19 : prise en g3, et d4 n'est pas comestible... la quiescence ne va pas assez loin?
rn2kb1r/p4ppp/1pp1pn2/2Pp1b2/3P4/1N5P/PP2PPB1/R1B1K1NR w KQkq - 1 10 : rook activity qui augmente de beaucoup après Th2... faut trouver un truc...
6r1/p2b3r/2p5/4R2B/Pk3Bp1/1P6/5PP1/6K1 w - - 4 31 : king safety? le roi noir se promène...
r2qk2r/p1p3pp/2pbp3/5bp1/2PP4/2N2N2/PPR2PPP/3Q1RK1 b kq - 0 13 : structure de pions +4??? il prend même pas la tour...
r1bqk2r/ppp2ppp/1bn5/4p1N1/3Pp3/2P5/PP3PPP/RNBQ1RK1 b kq - 1 9 : là y'a plein de coups qui marchent.. même exd4
-> Prioriser les coups qui n'ont pas regardé toutes les réponses de l'adversaire en entier??
-> Position ouverte/fermée = nombre de pions bloqués? (avec plus de valeurs pour les pions centraux)
-> Quand un coup n'est pas fully explored, il faut absolument le choisir..
-> r2qr1k1/pp3ppp/2nb1n2/4p3/2P3P1/1PNb3P/PB1PNPB1/R2QK2R w KQ - 0 12 : Th2?????????? SURTOUT PAS
-> r3r1k1/pp4pn/2nb1q2/4p2p/2P1B2P/1P6/PB1PNP2/R2Q1RK1 b - - 0 17 : il regarde pas Dxh4??
-> r1b1kb1r/ppppq1pp/8/5p2/2BQnB2/8/PPP2PPP/RN2R1K1 b kq - 1 9 : Dc5 égalise
-> Remettre virtual mobility pour l'évaluation de la sécurité du roi?
-> King safety est tellement proeminent qu'il y a beaucoup de coups qu'il ne regarde même pas, car il voit une menace en 1 au coup d'après (qu'il peut parer...)
-> En position perdante, il va chercher les draw (même si c'est pas déjà 3 répèt.. du coup il joue le coup qui répète, même si c'est pas le meilleur coup)
-> Trop de quiescence, pas assez de killer moves? il regarde que les captures...
-> Pour le pick_random_child: faire en fonction de l'évaluation relative!! (cela peut changer beaucoup de choses...)
-> GUI: toujours montrer le "meilleur" coup, même s'il dépasse pas l'arrow rate
-> GUI: afficher le coup avec la meilleure éval différement sur les flèches
-> En fait les autres coups qui ne font pas mat ne sont pas fully explored, d'où le souci...
-> Faire du debug, code clean et optimisations
-> Debugger la quiescence
-> get_safe_check_value() : hypeeeer lent!!!
-> Vérifier l'algo... à chaque fois y'a des coups qu'il regarde pas, sauf quand on clique dessus, il voit que c'est le meilleur coup...
-> Elargir la zone d'attaque défense du roi? pion en e5 participe à l'attaque.. le fou c1 aussi...
-> 5r2/2p3pk/pp1b2rp/3Rpq2/2P2P2/1P2B1P1/6QP/3R2K1 b - - 0 27 : beaucoup de choses à revoir dans king safety.. il faut mieux combiner les paramètres... ici les noirs sont gagnants
-> Dans quiescence à depth 0, il est pas censé passer plusieurs fois dedans pour un même noeud.. si?
-> En fait si, mais on peut avoir des quiescence à depth -1... ça pose problème?
-> 5k2/R4p2/2B3p1/6Pp/7P/P3P1K1/1PPr4/3r4 w - - 1 27 : plutôt égal
-> Il donne des pions beaucoup trop facilement...
-> r1bq1b1r/ppp2kpp/5n2/n7/3Bp3/8/PPPNNPPP/R2Q1RK1 b - - 2 9 : -_- le roi noir n'a pas de soucis là...
-> r2q4/p1p2k1p/3b4/1p3p2/2P3b1/2Q2N2/P1P1r1PP/3R1R1K w - - 0 19 : c5??????????????????????
-> Refaire un nouveau pick random move plus simple?
-> parfois ça re-explore un coup non fully explored avant de regarder les non-explorés...
-> Transpositions!! on a des overflows etc.. des trucs louches se produisent
-> A REGLER: *** Si y'a un problème de nombre de noeuds, c'est que lorsqu'on calcule dans une variante transposée, un seul des parents est mis à jour ***
-> Faut-il garder le beta cut-off si on est en échec??? alpha aussi??
-> Voir s'il faut moduler la profondeur de la quiescence en fonction de l'importance de la branche
-> q_depth plus petit avec des cas d'extensions?
-> revoir les autorisations de standpat?
-> positions_history à mettre dans exploration plutôt que board
-> Faut-il qu'il joue les "seuls coups" plus rapidement, ou c'est déjà le rôle du pseudo-random explorer?
-> Re élargir l'exploration des coups?
-> r4rk1/2p2ppp/p1nqp3/1p6/3P2b1/P3PN2/1P1QBPPP/2R2RK1 w - - 0 15 : Txc6!!
-> rnbq1rk1/ppp2ppp/8/3P4/2BNp1n1/3P4/PPP1QPPb/RNB2R1K b - - 1 11 : faut jouer Dh4!!
-> rk4r1/ppp2p1p/2b1n3/7R/7N/P1P3PB/2P5/2K2R2 w - - 2 27 : faut jouer Txf7!!
-> 2kr3r/B1p1b1pp/2p3qn/4p3/4N3/P2P2Nb/1PP2PKP/R3QR2 w - - 1 18 : faut prendre le fou...
-> rnb2rk1/pp3ppp/3q1n2/2b5/8/P7/1PBNNPPP/R1BQK2R w KQ - 1 13 : roque??

EVAL: 
-> Améliorer les pièces d'attaque et de défense... plus gros bonus quand une pièce attaque un endroit non (ou peu) défendu. plus gros bonus quand on défend une case attaquée
-> Il donne vraiment trop souvent des pions dans l'ouverture
-> King safety: protection: avoir une partie dans long term et une autre dans short term? (considéré comme faisant partie de la défense)
-> Pour évaluer les finales etc.., il faut un winnable white, et un winnable black... Tour Cavalier vs Tour = nulle
-> Pions arriérés
-> Re-évaluer les pièces en fonction du type de position (colonnes / diagonales ouvertes / fermées, pions passés...)
-> Evaluer la nature de la position (ouverte/fermée), car ça change tout sur s'il faut jouer actif ou positionnel...
-> Implémenter les faiblesses de la position? pour taper dessus, et éviter de s'en créer?
-> Lignes et colonnes ouvertes sur le roi, c'est grave seulement si des tours/fous/dames peuvent aller dessus
-> Potentiel d'attaque global qui modifie moins la king safety? même avec 2 pièces, ça peut mater contre beaucoup
-> Trop de bonus cumulés pour les fous: fianchetto, piece mobility, piece activity, bishop activity, bishop pair...
-> Pour king safety, quand ça dépasse pas 0, rien ne change.. alors il n'y a jamais de plan d'attaque...
-> Catégorie: Développement (~= distance au roque?), plutôt que de compter ça dans King
-> https://hxim.github.io/Stockfish-Evaluation-Guide/ : shelter strength à implémenter... rnbqkbnr/ppp1pppp/8/3p4/6P1/8/PPPPPP1P/RNBQKBNR w KQkq - 0 2 : ici le roi blanc est le plus faible. castling distance donne aussi un bonus, alors que le roque côté roi est pourri...
-> Pour les clouages, rajouter des bonus quand on les appuie avec d'autres attaques
-> Refaire l'activité des pièces
-> Etudier les bons fous et les mauvais fous
-> Rajouter les faiblesses sur une couleur
-> Faut-il garder le safe_squares = 1 pour les pions dans trapped_pieces?
-> Puissance des pions passés: dépend des pièces restantes. Une pièce mineure se sacrifie plus facilement dessus qu'une dame
-> Pawn protection pour quand le roi n'est pas roqué (en prenant en compte les poussées de pions f, g et h par exemple)
-> Ajouter un 'exposed queen' pour éviter les scandi?

r7/3n1k1p/2p1b1p1/pp6/n3PB2/3R1P2/6PP/5R1K b - - 1 30 : test king safety
2r4k/3Q1R2/6q1/8/4b3/6Pn/P4P1K/8 b - - 4 45 : ...
5k2/8/8/8/4b3/6PK/P4P2/8 b - - 0 49 : mieux pour les blancs
4rk2/1p3ppQ/1qn1p3/p1p3P1/4B3/P3BP2/1b3PK1/3R4 b - - 0 16 : gagnant pour les blancs
7r/2p2k2/p4b2/P1pPpPp1/2P1P1Rq/5B2/2Q4P/7K b - - 2 44 : c'est le roi blanc le moins bon ici. le roi noir est safe. des pions tous seuls ne suffisent pas à attaquer...
r2q1rk1/pppn1bpp/5p2/8/3PpN2/2P1B1Q1/P1P3PP/R4RK1 w - - 2 16 : pawn push threat... ne fait pas toujours de sens.. à supprimer?
3r1rk1/pp4pp/5p2/3n3R/4p3/2P3Q1/2q3PP/2B1R2K w - - 0 26 : Fh6 seule tentative pour sauver
r3k2r/pppb3p/4p1p1/n5Q1/4p3/2q3PP/P1P1B1P1/3R1R1K w kq - 0 20 : Tf7!! ça mate
r3r1k1/ppq2ppp/3b1n2/6n1/2P1p1P1/1PN4P/PBQPRPB1/R5K1 w - - 5 18 : il a peur pour le roi donc fait Rf1...
rnb1kb1r/pp3ppp/5n2/4q3/8/3B4/PP3PPP/RNBQK1NR w KQkq - 0 9 : pas Rf1 stp... :'(
5rk1/1p3Np1/p1n1Bn2/q4P1p/2Q4P/4R3/1P4P1/6K1 w - - 0 30 : le roi n'est en fait pas tant en danger que ça...
r1b2rk1/pp2bpp1/5n1p/8/8/1PNpN3/1P1P1PPP/R1B2RK1 b - - 1 17 : fou de cases noires des blancs: enfermé quasi à vie
2kr1b1r/ppp1qppp/5n2/8/3n4/1PN5/P1PPBPPP/R1BQ1RK1 b - - 4 11 : noirs mieux.. le cheval est mieux que le fou en e2
r4rk1/ppq2ppp/3b1n2/3p4/8/3P3P/PPP1QPP1/RNB2RK1 b - - 0 13 : y'a R là... les blancs sont mieux
r3k2r/ppp3pp/2n2n2/4pp2/8/3PBN2/bPP2PPP/2KR1B1R w kq - 0 12 : b3 enferme le fou
2r3k1/6p1/8/5p1p/4nP2/R1BRPK2/2P4P/7r b - - 5 40 : si on met overload, il trouve Txh2 beaucoup plus facilement et voit le mat... mais est-ce que ça ne fait pas doublon?
r1b1r2k/pp3pp1/2n4n/3qp3/2Np4/3B1N1P/PP3PP1/RQ2R1K1 w - - 0 17 : la dame ne participe qu'à moitié à l'attaque, car le fou blanc est devant... -> COMPTER CA COMME UNE SEMI ATTAQUE?
b7/P7/1B1k2p1/5p1p/4p2P/2b3P1/5P2/5BK1 w - - 2 41 : blancs gagnants!!
b7/P3k3/6p1/5pPp/2B1p3/6P1/5P2/6K1 b - - 0 44 : pareil!!
r1bq1r1k/1pp3p1/1n2pb1p/8/pP1P3P/P2B1NR1/2QB1PP1/R3K3 w Q - 2 19 : +2 à cause d'un overload sur h7, alors que ça menace rien...
r1bq1rk1/1ppnbppp/4p3/4P3/pPBP3P/P4N2/2QB1PP1/R3K2R b KQ - 0 14 : ici, il faut regarder le nombre de pièces en attaque pour les blancs: elles participent presque toutes! (même le pion e5)
r1bq1rk1/1pp1bpp1/1n2p2p/4P3/pP1P3P/P2B1N2/2QB1PP1/R3K2R w KQ - 0 16 : Th3 très fort, pour ramener une autre pièce dans l'attaque
r2q1r1k/1ppbbpp1/1n2p2p/4P3/pP1P3P/P2B1NR1/2QB1PP1/R3K3 w Q - 4 18 : Fxh6!! gagne déjà
r1bq1rk1/1pp3p1/1n3b1B/4p3/pP1P2R1/P2B1N2/2Q2PP1/R3K3 w Q - 0 21 : Txg7!! gagne (il faut un peu de calcul quand-même)
2rqkb1r/pp3p2/2n1p3/3pPnpp/3P4/3QB1PP/PP1N1P1N/R4RK1 b k - 0 14 : pas Th7 stp...
3rkbnr/pQ2pppp/4q3/2p5/3n4/6PP/PPPP1PB1/RNB2K1R w k - 1 10 : ici c'est les blancs qui sont gagnants...
r2q4/pp4kp/2p1Qrp1/3pB3/3P4/8/PPP3PP/R5K1 w - - 0 20 : met 4 ans à voir que Tf1 gagne alors que c'est évident... la quiescence prend trop de temps alors il regarde pas tous les coups et reste sur le standpat
r7/pp5k/2p2B2/3p2Qp/3P4/8/PPP3PP/6K1 w - - 1 25 : pareil
r1br2k1/pp3pp1/7p/5p2/3P4/1P1Q3P/5PP1/R5K1 b - - 1 31 : noirs un peu mieux
rnbqkb1r/ppp1pp1p/6p1/3pP3/3Pn3/2N5/PPPB1PPP/R2QKBNR b KQkq - 2 5 : mieux vaut prendre le fou que le cavalier!
r5k1/pp1nqrpp/2p5/8/2Bb1Nb1/6P1/P2BN2P/R2QKR2 w - - 5 19 : les blancs sont complètement gagnants
r2q1rk1/p1p2p1p/8/1b1pp1B1/3p2Q1/2P5/P1P3PP/R4RK1 b - - 0 20 : pareil
r4rk1/p1q3bp/2ppbp2/2p1n2p/4PB1Q/3PN3/PPP1N1P1/R4RK1 b - - 1 18 : roi noir très faible. plus que le roi blanc... (blancs gagnants)
rnb4r/ppp1BQbk/3p3p/4P3/2BP4/2N5/PPP2K1P/7q w - - 3 18 : roi noir beaucoup plus en danger (#3)
rnb2b1r/p4kpp/8/3RP3/2p5/5N2/PP3PPP/R1B3K1 w - - 0 15 : roi safe!!
rnb1k2r/ppppq1pp/1b6/3BPp2/P7/2P2N2/2P1K1PP/R1BQ3R b kq - 0 10 : le roi est quasi tranquille
r1b1kq1r/pp1p2p1/n1p4p/P3Pp2/2B4N/2P1K3/2P3PP/R2Q3R b kq - 2 16 : y'a R
5rk1/p4qb1/1p1p3p/3Ppp2/PRP1P3/2N1BnPb/2Q4P/1R5K w - - 0 5 : c'est le roi blanc qui sue...
3rr1k1/pp3p2/2ppqp1p/4pN2/4P1PQ/1P1PP2P/1PP5/5RK1 b - - 13 22 : foutu pour le roi noir
N6N/pp2k1pp/8/3Pp3/2Bn4/6qP/PPPP4/R1B4K b - - 0 20 : Cf3 #3
3q4/8/4r3/4np1p/5Pk1/4P3/6KP/4B3 w - - 1 3 : #1 pour les blancs
r1b2rk1/pnB1qp1p/2Q3p1/1B1pp3/8/2P1PP2/P1P3PP/1R3RK1 w - - 0 18 : blancs gagnants
r1bqkbnr/ppp2ppp/2np4/4p3/4P3/3P1N2/PPP1BPPP/RNBQK2R b KQkq - 1 4 : f5 fort! il faut attaquer la chaîne de pions, et prendre le centre
2nr2k1/1p1rppbp/n3b1p1/1N6/2P5/BPN2B2/P4PPP/2R2RK1 b - - 10 18 : blancs gagnants
1k1r1br1/ppp2ppp/2nq4/4p3/2P3n1/2NPBN2/P1P2PPP/1R1QR1K1 w - - 6 13 : faut garder le fou e3 (Fd2 le meilleur coup)
r1bqk2r/ppp4p/1bnppp2/6B1/3P4/2P2N2/PP4PP/RN1Q1BKR w kq - 0 11 : attention avec Ff4, ça donne du e5 aux noirs, et le roi en g1 sue
1bkr3r/1ppb2q1/2nppp2/pN5p/P2P3N/2P1B3/1P4PP/R2Q1BKR w - - 6 19 : il faut envoyer du b4 pour attaquer le roi noir
r5k1/ppqnn2p/2pRb1p1/2P5/4P2r/1PQ1B3/P4PBP/5RK1 w - - 3 20 : gagnant stratégiquement
Nnb2b1r/1p1k1p1p/p4p2/8/3p4/8/PP2PPPP/R3KB1R b KQ - 0 12 : Fc5 gagne (le cavalier est enfermé)
2kr1b1r/pppqpppp/2n5/3n1b2/3P4/2PB1N2/PP3PPP/RNBQ1RK1 w - - 5 8 : il faut envoyer les pions sur le roi noir, c'est du roque opposés (augmenter la valeur des pawn storm en roques opposés?)
8/8/8/5Q1K/8/2pp4/2k5/8 w - - 0 5 : là le roi doit forcément aller vers les pions et le roi adverse pour attaquer
2b1k2r/5ppp/1qp5/p2n4/4pP2/P7/R3B1PP/1rB1QKNR w k - 2 17 : déjà foutu pour les blancs
r1bq1rk1/1p3ppp/p1np4/3Np1b1/4P3/1N2P3/PPPQB1PP/R4RK1 w - - 7 13 : noirs un peu mieux (pion e3 très faible, et tapé dessus; +clouage avec la dame)
rnq1k2r/pp2bp2/2p5/3p4/5Pb1/P2P1NPp/1PP4K/R1BQ1R1N b kq - 0 17 : ici le pion h3 fait office de bouclier. le roi est en fait safe
2rqr2k/p2p1p1B/bbn4Q/1p2P1p1/1P4P1/P3PN2/2P2PP1/RNB2RK1 w - - 3 17 : devrait voir le mat avec Fg6 en 3...
3r1rk1/2qnpp1p/1p4p1/2p1b3/4P3/1QP1B2P/1P2BPP1/R4RK1 b - - 1 6 : ici le roi est effectivement mieux en g1 que h1 (donc Fh2+ puis Ff4 plus fort que Ff4 direct)
r1bqk2r/1p1n1pb1/p1pBp1pp/2Pp3n/PP1P4/3BPN2/3N1PPP/R2QK2R b KQkq - 0 1 : améliorer la notion de bon fou? en fonction des pions adverses? ici tous les pions adverses sont sur case blanche.. le fou de cases noires des blancs est-il donc un bon fou?
r1r5/2p1bk1p/p1Pp2pP/P4pP1/1R1PpP2/4P3/4NK2/1R6 w - - 0 1 : d5 hyper fort stratégiquement! le fou des noirs ne peut plus jouer
rnb2b1r/ppp1B2k/3p3p/4P2Q/2BP4/2N5/PPP2K1P/7q w - - 1 17 : le roi noir est mat
r1b2kn1/1p1p1p1r/1p1P3p/1N1N1R2/6p1/8/PP4PP/5RK1 b - - 3 21 : fou blanc enfermé à vie
2Rnk3/3p2p1/3Pp2r/1b2P1Np/7P/5P1K/6P1/8 b - - 1 43 : les noirs sont paralysés -> gagnant pour les blancs (même Lc0 met du temps à comprendre)
3nk3/1bRp2p1/3Pp2r/1q2P1Np/1P3Q1P/5P1K/6P1/8 w - - 3 40 : Dc4 gagne ici (grâce à ce qui a été dit plus haut)
2kr1b2/pp2pp2/8/8/3p3B/3P4/PPP1KPr1/R6R w - - 0 21 : Fg3 enferme la tour
r1bq1rk1/2n2nbp/3p2p1/p1pPpP2/P1P5/2NN4/3BBPPP/1R1Q1RK1 b - - 0 19 : ici gxf5 est intéressant: pions connectés au centre. ça ouvre une colonne sur le roi adverse. sur Fxf5, la case e4 est faible (il faut améliorer la définition des cases faibles... quand un pion est bloqué et ne peut pas controller la case)
2kr3r/B1p1b1pp/2p3qn/4p3/4N3/P2P2NK/1PP2P1P/R3QR2 b - - 0 18 : le roi blanc n'a pas de problème
r4rk1/1p3ppp/3b4/p1pq4/4b1Q1/2P2N2/PP3PPP/R1B2RK1 b - - 1 18 : g6 erreur car ça donne les cases noires autour du roi après Fh6
1k6/5ppp/1p6/8/4BP2/4p1Pb/1q5r/2R1Q1K1 b - - 3 34 : roi blanc mat
r7/ppp2pp1/3p1nk1/1P1Pp3/1PP1Pn2/R4Pqr/1B1Q3N/6RK b - - 1 29 : quasi gagnant pour les noirs (roi faible)
3rrbk1/p1q2pp1/1n4p1/1R1p4/3B2P1/2PQ1N1P/P4PK1/5R2 w - - 9 23 : le roi blanc n'est pas si pourri
2q2bk1/p2r1pp1/Rn2r1p1/R2p4/3B2P1/2PQ1N1P/P4PK1/8 b - - 18 27 : ici les blancs sont quasi gagnants. -175 pour les trapped piece, à revoir car la tour n'est pas vraiment en danger ni isolée
r4rk1/ppq1bpp1/4bn2/6Bp/Q2pP2P/3P2P1/PP2NPB1/1K1R3R b - - 3 16 : b5 seul coup
6Q1/8/5K2/8/1k6/8/4B3/2q5 w - - 0 11 : nulle théorique
r2q1rk1/ppp2ppp/2nbbn2/8/3P4/2PB1N2/PP3PPP/RNBQ1RK1 b - - 0 8 : trapped pieces qui favorise les noirs.. pourquoi?
5rk1/p3q1pp/2p1p3/2Pppr2/7b/2P1QP2/PP1N3N/2K3RR w - - 2 7 : gagnant pour les blancs (colonnes ouvertes sur le roi, occupées par des tours)
r5k1/1br1nppp/4p1n1/1PqpP3/p2N1P2/2P3Q1/R3B1PP/1N1R3K w - - 0 1 : ici le fou est mieux en d3 que f3... fianchetto ne fait pas de sens??
2br3k/2q4p/1pn1p1r1/p2pPpNQ/P1pP4/2P5/1PB2PP1/R3R1K1 w - - 1 30 : blancs gagnants
2br1rk1/1pq4p/p1nbp1p1/3pNp2/P1pP1P2/2P2NQP/1PB2PP1/R3R1K1 b - - 3 23 : blancs mieux (case faible en e5, pion arriéré en e6).. trapped pieces -70??
2n3k1/1p1r1ppp/p4bb1/N3p3/PPB1p1P1/B3P2P/5P2/5RK1 w - - 1 26 : Cxb7!! gagne (pions passés connectés hyper forts)
8/1p1Q2qk/4P2p/5p2/p4pP1/8/P5K1/8 w - - 0 28 : blancs gagnants
3rkb2/1pp1pp2/p1b5/4P1p1/2q3Pr/2N1PP1p/PB5P/2R1QRK1 w - - 0 19 : le roi blanc est le plus faible
r2q2k1/1p3p1p/p1p3p1/2n1Pp1P/2P5/3BR3/PP1Q1PP1/6K1 b - - 2 25 : gagnant pour les noirs!
rbr5/1q3p2/pPp1pBpk/P1QpP2p/1R5P/6P1/5P2/2R3K1 b - - 5 18 : les noirs n'ont plus de coups!
8/pp3k2/3b3p/5p2/P3n2P/1P1RPN2/1rrBKP2/6R1 b - - 0 25 : gagnant pour les noirs (beaucoup d'activité + roi blanc faible)
r1b2rk1/ppq2p1p/2np2pb/4p3/4P3/2PBPN2/PP1N2PP/R2Q1R1K w - - 3 3 : faiblesse en e3 (et e4)
r4rk1/5ppp/5b2/P4p2/8/8/P2B1PPP/3RR1K1 w - - 2 22 : a3 pour Fb4 gagne.. structure solide (sinon y'a des faiblesses)
r2q1rk1/pp1nbppp/2p2n2/3p3b/8/1P1B1N1P/PBPP1PP1/RN1QR1K1 w - - 3 11 : le fou en d3 est pas si mal, mais il bloque le pion d

-> FAUT METTRE DES POINTEURS PARTOUT AU LIEU DE COPIER LES OBJETTTTTTSSS !! (exploration.h, gui?)

-> Retirer pawn_shield/pawn_storm des éval (déjà fait dans king_safety)
-> Regarder les TODO/FIXME dans exploration.cpp
-> Alpha-beta pruning pour la quiescence search à fix...
-> Regarder les fins de variantes pour voir si ça fonctionne

-> TESTING: Faire une fonction pour tester les IAs: problèmes tactiques, stratégiques, finales, ouvertures... avec différents temps de réflexion (1s, 3s, 10s par exemple)
-> Fonction de test d'évaluation: comparer les évals de Grogros avec celles de Leela par exemple puis fine-tuner. Résultat final: correlation entre les évals de Grogros et les évals de Leela
-> Utiliser ça pour entraîner les réseaux de neurones (au lieu de jouer contre d'autres réseaux? combiner les deux?)

-> Simplifier le softmax: delta entre le meilleur coup et l'actuel, et voir en fonction du pourcentage de réflexion déjà fait

---------
-> Pour le softmax, faut-il un gradient absolu ou relatif? pour le moment il y a la même différence entre -100 et +100 qu'entre +1800 et +2000? pas optimal...
-> Peut-on fusionner _tested_moves et _current_moves?
-> Il faut reset la table de transposition après chaque coup? sinon y'aura des positions obselettes (et potentiellement avec des indices buffer faux)
-> Réduire le temps de l'évaluation de Grogros (voir king_safety, et implémenter l'évaluation incrémentale)
-> Utiliser une mini clé de Zobrist pour les répétitions (car il y a peu de chances de collisions?) -> clé de 16 bits?
-> Table de transposition
-> Promotion de variantes: il faut repasser sur la variante principale au moment de la promotion
-> Promotions de variantes -> il faut promouvoir toute la branche depuis le début, pas juste le dernier coup (+ le FIXME -> il faut sélectionner le bon noeud après la promotion)
-> Pawn storm / Pawn shield (rajout des colonnes/diagonales ouvertes etc...) / Pions arriérés / Fix king safety / Pieces alignement (à finir)
-> Quiescence nodes qui augmente aussi avec les threads
-> Temps affiché = vrai temps
-> Delta pruning (quiessence search)


----- Réseaux de neurones -----

-> Faut t-il de la symétrie dans le réseau de neurone? (car sinon il évalue pas de la même manière les blancs et les noirs)
-> Comment le faire apprendre?
-> Parties contre lui-même
-> Algorithme génétique: on détruit les plus faibles, et on fait des mutations sur les plus forts
-> Bonus et malus pendant les parties, lorsqu'il a mal évalué une position
-> Apprentissage à partir des fins de partie, puis on remonte
-> Reinforcement learning
-> Prendre en compte d'autres paramètres que les pièces (trait, roques...)
-> Y'a peu de valeurs négatives dans les évals, est-ce normal?